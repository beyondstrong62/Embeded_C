
Day18_SPI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001414  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000038  080015e4  080015e4  000025e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800161c  0800161c  00003068  2**0
                  CONTENTS
  4 .ARM          00000008  0800161c  0800161c  0000261c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001624  08001624  00003068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001624  08001624  00002624  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001628  08001628  00002628  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000068  20000000  0800162c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000188  20000068  08001694  00003068  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001f0  08001694  000031f0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00003068  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001760  00000000  00000000  00003098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000077c  00000000  00000000  000047f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000001c0  00000000  00000000  00004f78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000130  00000000  00000000  00005138  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000d9dd  00000000  00000000  00005268  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002675  00000000  00000000  00012c45  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000479af  00000000  00000000  000152ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0005cc69  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000cc4  00000000  00000000  0005ccac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005f  00000000  00000000  0005d970  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000068 	.word	0x20000068
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080015cc 	.word	0x080015cc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000006c 	.word	0x2000006c
 800020c:	080015cc 	.word	0x080015cc

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <ADC_IRQHandler>:
uint32_t adc_read(void){
    while(!(ADC1->SR & ADC_SR_EOC));
    return (ADC1->DR);
}

void ADC_IRQHandler(void){
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0

    if((ADC1->SR & ADC_SR_EOC) != 0){
 80002b6:	4b11      	ldr	r3, [pc, #68]	@ (80002fc <ADC_IRQHandler+0x4c>)
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	f003 0302 	and.w	r3, r3, #2
 80002be:	2b00      	cmp	r3, #0
 80002c0:	d018      	beq.n	80002f4 <ADC_IRQHandler+0x44>
        ADC1->SR &=~ ADC_SR_EOC;
 80002c2:	4b0e      	ldr	r3, [pc, #56]	@ (80002fc <ADC_IRQHandler+0x4c>)
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	4a0d      	ldr	r2, [pc, #52]	@ (80002fc <ADC_IRQHandler+0x4c>)
 80002c8:	f023 0302 	bic.w	r3, r3, #2
 80002cc:	6013      	str	r3, [r2, #0]

        volatile uint32_t value = ADC1->DR;
 80002ce:	4b0b      	ldr	r3, [pc, #44]	@ (80002fc <ADC_IRQHandler+0x4c>)
 80002d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002d2:	603b      	str	r3, [r7, #0]
        printf("%d\n\r", (int)value);
 80002d4:	683b      	ldr	r3, [r7, #0]
 80002d6:	4619      	mov	r1, r3
 80002d8:	4809      	ldr	r0, [pc, #36]	@ (8000300 <ADC_IRQHandler+0x50>)
 80002da:	f000 fb09 	bl	80008f0 <iprintf>
        for(uint32_t i=0;i<0xffff;i++);
 80002de:	2300      	movs	r3, #0
 80002e0:	607b      	str	r3, [r7, #4]
 80002e2:	e002      	b.n	80002ea <ADC_IRQHandler+0x3a>
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	3301      	adds	r3, #1
 80002e8:	607b      	str	r3, [r7, #4]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d9f7      	bls.n	80002e4 <ADC_IRQHandler+0x34>
    }
}
 80002f4:	bf00      	nop
 80002f6:	3708      	adds	r7, #8
 80002f8:	46bd      	mov	sp, r7
 80002fa:	bd80      	pop	{r7, pc}
 80002fc:	40012000 	.word	0x40012000
 8000300:	080015e4 	.word	0x080015e4

08000304 <main>:
#include <stdio.h>

char src[] = "Hello World";
char dest[20];

int main(void) {
 8000304:	b580      	push	{r7, lr}
 8000306:	b082      	sub	sp, #8
 8000308:	af00      	add	r7, sp, #0
    uint32_t count = 0;
 800030a:	2300      	movs	r3, #0
 800030c:	607b      	str	r3, [r7, #4]
    GPIO_init();
 800030e:	f000 f833 	bl	8000378 <GPIO_init>
    SPI1_master();
 8000312:	f000 f899 	bl	8000448 <SPI1_master>
    SPI3_slave();
 8000316:	f000 f8f3 	bl	8000500 <SPI3_slave>

    for (count = 0; count < sizeof(src); count++) {
 800031a:	2300      	movs	r3, #0
 800031c:	607b      	str	r3, [r7, #4]
 800031e:	e01d      	b.n	800035c <main+0x58>
        SPI1->DR = src[count]; // send data from SPI
 8000320:	4a11      	ldr	r2, [pc, #68]	@ (8000368 <main+0x64>)
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	4413      	add	r3, r2
 8000326:	781a      	ldrb	r2, [r3, #0]
 8000328:	4b10      	ldr	r3, [pc, #64]	@ (800036c <main+0x68>)
 800032a:	60da      	str	r2, [r3, #12]
        while (!(SPI1->SR & (1 << 1))) {
 800032c:	bf00      	nop
 800032e:	4b0f      	ldr	r3, [pc, #60]	@ (800036c <main+0x68>)
 8000330:	689b      	ldr	r3, [r3, #8]
 8000332:	f003 0302 	and.w	r3, r3, #2
 8000336:	2b00      	cmp	r3, #0
 8000338:	d0f9      	beq.n	800032e <main+0x2a>
            // wait until TXE (Transmit buffer empty) flag is set
        }
        if (SPI3->SR & (1 << 0)) {
 800033a:	4b0d      	ldr	r3, [pc, #52]	@ (8000370 <main+0x6c>)
 800033c:	689b      	ldr	r3, [r3, #8]
 800033e:	f003 0301 	and.w	r3, r3, #1
 8000342:	2b00      	cmp	r3, #0
 8000344:	d007      	beq.n	8000356 <main+0x52>
            dest[count] = SPI3->DR; // receive data from SPI
 8000346:	4b0a      	ldr	r3, [pc, #40]	@ (8000370 <main+0x6c>)
 8000348:	68db      	ldr	r3, [r3, #12]
 800034a:	b2d9      	uxtb	r1, r3
 800034c:	4a09      	ldr	r2, [pc, #36]	@ (8000374 <main+0x70>)
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	4413      	add	r3, r2
 8000352:	460a      	mov	r2, r1
 8000354:	701a      	strb	r2, [r3, #0]
    for (count = 0; count < sizeof(src); count++) {
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	3301      	adds	r3, #1
 800035a:	607b      	str	r3, [r7, #4]
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	2b0b      	cmp	r3, #11
 8000360:	d9de      	bls.n	8000320 <main+0x1c>
        }
    }

    while (1) {
 8000362:	bf00      	nop
 8000364:	e7fd      	b.n	8000362 <main+0x5e>
 8000366:	bf00      	nop
 8000368:	20000000 	.word	0x20000000
 800036c:	40013000 	.word	0x40013000
 8000370:	40003c00 	.word	0x40003c00
 8000374:	20000084 	.word	0x20000084

08000378 <GPIO_init>:
 */

#include "spi.h"

void GPIO_init()
{
 8000378:	b480      	push	{r7}
 800037a:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= (1<<0);
 800037c:	4b2f      	ldr	r3, [pc, #188]	@ (800043c <GPIO_init+0xc4>)
 800037e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000380:	4a2e      	ldr	r2, [pc, #184]	@ (800043c <GPIO_init+0xc4>)
 8000382:	f043 0301 	orr.w	r3, r3, #1
 8000386:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOA->MODER &= ~((3<<10) | (3<<12) | (3<<14));
 8000388:	4b2d      	ldr	r3, [pc, #180]	@ (8000440 <GPIO_init+0xc8>)
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	4a2c      	ldr	r2, [pc, #176]	@ (8000440 <GPIO_init+0xc8>)
 800038e:	f423 437c 	bic.w	r3, r3, #64512	@ 0xfc00
 8000392:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (2<<10)|(2<<12)|(2<<14);
 8000394:	4b2a      	ldr	r3, [pc, #168]	@ (8000440 <GPIO_init+0xc8>)
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	4a29      	ldr	r2, [pc, #164]	@ (8000440 <GPIO_init+0xc8>)
 800039a:	f443 4328 	orr.w	r3, r3, #43008	@ 0xa800
 800039e:	6013      	str	r3, [r2, #0]
	//GPIOA->OTYPER &= ~(7<<5);
	GPIOA->OSPEEDR &= ~((3<<10)|(3<<12)|(3<<14));
 80003a0:	4b27      	ldr	r3, [pc, #156]	@ (8000440 <GPIO_init+0xc8>)
 80003a2:	689b      	ldr	r3, [r3, #8]
 80003a4:	4a26      	ldr	r2, [pc, #152]	@ (8000440 <GPIO_init+0xc8>)
 80003a6:	f423 437c 	bic.w	r3, r3, #64512	@ 0xfc00
 80003aa:	6093      	str	r3, [r2, #8]
	GPIOA->OSPEEDR |= (2<<10)|(2<<12)|(2<<14);
 80003ac:	4b24      	ldr	r3, [pc, #144]	@ (8000440 <GPIO_init+0xc8>)
 80003ae:	689b      	ldr	r3, [r3, #8]
 80003b0:	4a23      	ldr	r2, [pc, #140]	@ (8000440 <GPIO_init+0xc8>)
 80003b2:	f443 4328 	orr.w	r3, r3, #43008	@ 0xa800
 80003b6:	6093      	str	r3, [r2, #8]
	GPIOA->AFR[0] &= ~(0xFFF<<20);
 80003b8:	4b21      	ldr	r3, [pc, #132]	@ (8000440 <GPIO_init+0xc8>)
 80003ba:	6a1b      	ldr	r3, [r3, #32]
 80003bc:	4a20      	ldr	r2, [pc, #128]	@ (8000440 <GPIO_init+0xc8>)
 80003be:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80003c2:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (0x555<<20);
 80003c4:	4b1e      	ldr	r3, [pc, #120]	@ (8000440 <GPIO_init+0xc8>)
 80003c6:	6a1b      	ldr	r3, [r3, #32]
 80003c8:	4a1d      	ldr	r2, [pc, #116]	@ (8000440 <GPIO_init+0xc8>)
 80003ca:	f043 43aa 	orr.w	r3, r3, #1426063360	@ 0x55000000
 80003ce:	f443 03a0 	orr.w	r3, r3, #5242880	@ 0x500000
 80003d2:	6213      	str	r3, [r2, #32]

	RCC->AHB1ENR |= (1<<2);
 80003d4:	4b19      	ldr	r3, [pc, #100]	@ (800043c <GPIO_init+0xc4>)
 80003d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003d8:	4a18      	ldr	r2, [pc, #96]	@ (800043c <GPIO_init+0xc4>)
 80003da:	f043 0304 	orr.w	r3, r3, #4
 80003de:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOC->MODER &=~((3<<20) | (3<<22) | (3<<24));
 80003e0:	4b18      	ldr	r3, [pc, #96]	@ (8000444 <GPIO_init+0xcc>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	4a17      	ldr	r2, [pc, #92]	@ (8000444 <GPIO_init+0xcc>)
 80003e6:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
 80003ea:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |= (2<<20)|(2<<22)|(2<<24);
 80003ec:	4b15      	ldr	r3, [pc, #84]	@ (8000444 <GPIO_init+0xcc>)
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	4a14      	ldr	r2, [pc, #80]	@ (8000444 <GPIO_init+0xcc>)
 80003f2:	f043 7328 	orr.w	r3, r3, #44040192	@ 0x2a00000
 80003f6:	6013      	str	r3, [r2, #0]
	//GPIOC->OTYPER &= ~(7<<10);
	GPIOC->OSPEEDR &= ~((3<<20)|(3<<22)|(3<<24));
 80003f8:	4b12      	ldr	r3, [pc, #72]	@ (8000444 <GPIO_init+0xcc>)
 80003fa:	689b      	ldr	r3, [r3, #8]
 80003fc:	4a11      	ldr	r2, [pc, #68]	@ (8000444 <GPIO_init+0xcc>)
 80003fe:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
 8000402:	6093      	str	r3, [r2, #8]
	GPIOC->OSPEEDR |= (2<<20)|(2<<22)|(2<<24);
 8000404:	4b0f      	ldr	r3, [pc, #60]	@ (8000444 <GPIO_init+0xcc>)
 8000406:	689b      	ldr	r3, [r3, #8]
 8000408:	4a0e      	ldr	r2, [pc, #56]	@ (8000444 <GPIO_init+0xcc>)
 800040a:	f043 7328 	orr.w	r3, r3, #44040192	@ 0x2a00000
 800040e:	6093      	str	r3, [r2, #8]
	GPIOC->AFR[1] &= ~(0xFFF<<8);
 8000410:	4b0c      	ldr	r3, [pc, #48]	@ (8000444 <GPIO_init+0xcc>)
 8000412:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000414:	4a0b      	ldr	r2, [pc, #44]	@ (8000444 <GPIO_init+0xcc>)
 8000416:	f423 237f 	bic.w	r3, r3, #1044480	@ 0xff000
 800041a:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 800041e:	6253      	str	r3, [r2, #36]	@ 0x24
	GPIOC->AFR[1] |= (0x666<<8);
 8000420:	4b08      	ldr	r3, [pc, #32]	@ (8000444 <GPIO_init+0xcc>)
 8000422:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000424:	4a07      	ldr	r2, [pc, #28]	@ (8000444 <GPIO_init+0xcc>)
 8000426:	f443 23cc 	orr.w	r3, r3, #417792	@ 0x66000
 800042a:	f443 63c0 	orr.w	r3, r3, #1536	@ 0x600
 800042e:	6253      	str	r3, [r2, #36]	@ 0x24

}
 8000430:	bf00      	nop
 8000432:	46bd      	mov	sp, r7
 8000434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000438:	4770      	bx	lr
 800043a:	bf00      	nop
 800043c:	40023800 	.word	0x40023800
 8000440:	40020000 	.word	0x40020000
 8000444:	40020800 	.word	0x40020800

08000448 <SPI1_master>:

void SPI1_master()
{
 8000448:	b480      	push	{r7}
 800044a:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= (1<<12);
 800044c:	4b2a      	ldr	r3, [pc, #168]	@ (80004f8 <SPI1_master+0xb0>)
 800044e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000450:	4a29      	ldr	r2, [pc, #164]	@ (80004f8 <SPI1_master+0xb0>)
 8000452:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000456:	6453      	str	r3, [r2, #68]	@ 0x44
	SPI1->CR1 |= (1<<2); // master
 8000458:	4b28      	ldr	r3, [pc, #160]	@ (80004fc <SPI1_master+0xb4>)
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	4a27      	ldr	r2, [pc, #156]	@ (80004fc <SPI1_master+0xb4>)
 800045e:	f043 0304 	orr.w	r3, r3, #4
 8000462:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (1<<0) | (1<<1);
 8000464:	4b25      	ldr	r3, [pc, #148]	@ (80004fc <SPI1_master+0xb4>)
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	4a24      	ldr	r2, [pc, #144]	@ (80004fc <SPI1_master+0xb4>)
 800046a:	f043 0303 	orr.w	r3, r3, #3
 800046e:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &= ~(7U<<3);
 8000470:	4b22      	ldr	r3, [pc, #136]	@ (80004fc <SPI1_master+0xb4>)
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	4a21      	ldr	r2, [pc, #132]	@ (80004fc <SPI1_master+0xb4>)
 8000476:	f023 0338 	bic.w	r3, r3, #56	@ 0x38
 800047a:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (3U<<3);
 800047c:	4b1f      	ldr	r3, [pc, #124]	@ (80004fc <SPI1_master+0xb4>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	4a1e      	ldr	r2, [pc, #120]	@ (80004fc <SPI1_master+0xb4>)
 8000482:	f043 0318 	orr.w	r3, r3, #24
 8000486:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1<<7);
 8000488:	4b1c      	ldr	r3, [pc, #112]	@ (80004fc <SPI1_master+0xb4>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	4a1b      	ldr	r2, [pc, #108]	@ (80004fc <SPI1_master+0xb4>)
 800048e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000492:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |=(1<<9);
 8000494:	4b19      	ldr	r3, [pc, #100]	@ (80004fc <SPI1_master+0xb4>)
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	4a18      	ldr	r2, [pc, #96]	@ (80004fc <SPI1_master+0xb4>)
 800049a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800049e:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |=(1<<8);
 80004a0:	4b16      	ldr	r3, [pc, #88]	@ (80004fc <SPI1_master+0xb4>)
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	4a15      	ldr	r2, [pc, #84]	@ (80004fc <SPI1_master+0xb4>)
 80004a6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80004aa:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1<<10);
 80004ac:	4b13      	ldr	r3, [pc, #76]	@ (80004fc <SPI1_master+0xb4>)
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	4a12      	ldr	r2, [pc, #72]	@ (80004fc <SPI1_master+0xb4>)
 80004b2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80004b6:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1<<11);
 80004b8:	4b10      	ldr	r3, [pc, #64]	@ (80004fc <SPI1_master+0xb4>)
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	4a0f      	ldr	r2, [pc, #60]	@ (80004fc <SPI1_master+0xb4>)
 80004be:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80004c2:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(3<<12);
 80004c4:	4b0d      	ldr	r3, [pc, #52]	@ (80004fc <SPI1_master+0xb4>)
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	4a0c      	ldr	r2, [pc, #48]	@ (80004fc <SPI1_master+0xb4>)
 80004ca:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80004ce:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1<<15);
 80004d0:	4b0a      	ldr	r3, [pc, #40]	@ (80004fc <SPI1_master+0xb4>)
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	4a09      	ldr	r2, [pc, #36]	@ (80004fc <SPI1_master+0xb4>)
 80004d6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80004da:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (1<<6);
 80004dc:	4b07      	ldr	r3, [pc, #28]	@ (80004fc <SPI1_master+0xb4>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	4a06      	ldr	r2, [pc, #24]	@ (80004fc <SPI1_master+0xb4>)
 80004e2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80004e6:	6013      	str	r3, [r2, #0]
	SPI1->CR2=0;
 80004e8:	4b04      	ldr	r3, [pc, #16]	@ (80004fc <SPI1_master+0xb4>)
 80004ea:	2200      	movs	r2, #0
 80004ec:	605a      	str	r2, [r3, #4]
}
 80004ee:	bf00      	nop
 80004f0:	46bd      	mov	sp, r7
 80004f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f6:	4770      	bx	lr
 80004f8:	40023800 	.word	0x40023800
 80004fc:	40013000 	.word	0x40013000

08000500 <SPI3_slave>:

void SPI3_slave()
{
 8000500:	b480      	push	{r7}
 8000502:	af00      	add	r7, sp, #0
	RCC->APB1ENR |= (1<<15);
 8000504:	4b23      	ldr	r3, [pc, #140]	@ (8000594 <SPI3_slave+0x94>)
 8000506:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000508:	4a22      	ldr	r2, [pc, #136]	@ (8000594 <SPI3_slave+0x94>)
 800050a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800050e:	6413      	str	r3, [r2, #64]	@ 0x40
	SPI3->CR1 &= ~(1<<2); // slave
 8000510:	4b21      	ldr	r3, [pc, #132]	@ (8000598 <SPI3_slave+0x98>)
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	4a20      	ldr	r2, [pc, #128]	@ (8000598 <SPI3_slave+0x98>)
 8000516:	f023 0304 	bic.w	r3, r3, #4
 800051a:	6013      	str	r3, [r2, #0]
	SPI3->CR1 |= (1<<0) | (1<<1);
 800051c:	4b1e      	ldr	r3, [pc, #120]	@ (8000598 <SPI3_slave+0x98>)
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	4a1d      	ldr	r2, [pc, #116]	@ (8000598 <SPI3_slave+0x98>)
 8000522:	f043 0303 	orr.w	r3, r3, #3
 8000526:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &= ~(1<<7);
 8000528:	4b1b      	ldr	r3, [pc, #108]	@ (8000598 <SPI3_slave+0x98>)
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	4a1a      	ldr	r2, [pc, #104]	@ (8000598 <SPI3_slave+0x98>)
 800052e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000532:	6013      	str	r3, [r2, #0]
	SPI3->CR1 |= (1<<9);
 8000534:	4b18      	ldr	r3, [pc, #96]	@ (8000598 <SPI3_slave+0x98>)
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	4a17      	ldr	r2, [pc, #92]	@ (8000598 <SPI3_slave+0x98>)
 800053a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800053e:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &=~(1<<8);
 8000540:	4b15      	ldr	r3, [pc, #84]	@ (8000598 <SPI3_slave+0x98>)
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	4a14      	ldr	r2, [pc, #80]	@ (8000598 <SPI3_slave+0x98>)
 8000546:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800054a:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &=~(1<<10);
 800054c:	4b12      	ldr	r3, [pc, #72]	@ (8000598 <SPI3_slave+0x98>)
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	4a11      	ldr	r2, [pc, #68]	@ (8000598 <SPI3_slave+0x98>)
 8000552:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000556:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &=~(1<<11);
 8000558:	4b0f      	ldr	r3, [pc, #60]	@ (8000598 <SPI3_slave+0x98>)
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	4a0e      	ldr	r2, [pc, #56]	@ (8000598 <SPI3_slave+0x98>)
 800055e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8000562:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &=~(3<<12);
 8000564:	4b0c      	ldr	r3, [pc, #48]	@ (8000598 <SPI3_slave+0x98>)
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	4a0b      	ldr	r2, [pc, #44]	@ (8000598 <SPI3_slave+0x98>)
 800056a:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800056e:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &=~(1<<15);
 8000570:	4b09      	ldr	r3, [pc, #36]	@ (8000598 <SPI3_slave+0x98>)
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	4a08      	ldr	r2, [pc, #32]	@ (8000598 <SPI3_slave+0x98>)
 8000576:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800057a:	6013      	str	r3, [r2, #0]
	SPI3->CR1 |= (1<<6);
 800057c:	4b06      	ldr	r3, [pc, #24]	@ (8000598 <SPI3_slave+0x98>)
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	4a05      	ldr	r2, [pc, #20]	@ (8000598 <SPI3_slave+0x98>)
 8000582:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000586:	6013      	str	r3, [r2, #0]

}
 8000588:	bf00      	nop
 800058a:	46bd      	mov	sp, r7
 800058c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop
 8000594:	40023800 	.word	0x40023800
 8000598:	40003c00 	.word	0x40003c00

0800059c <SysTick_Handler>:
    SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk |
                    SysTick_CTRL_TICKINT_Msk |
                    SysTick_CTRL_ENABLE_Msk;
}

void SysTick_Handler(){
 800059c:	b480      	push	{r7}
 800059e:	af00      	add	r7, sp, #0
    if (ms_counter) ms_counter--;
 80005a0:	4b09      	ldr	r3, [pc, #36]	@ (80005c8 <SysTick_Handler+0x2c>)
 80005a2:	681b      	ldr	r3, [r3, #0]
 80005a4:	2b00      	cmp	r3, #0
 80005a6:	d004      	beq.n	80005b2 <SysTick_Handler+0x16>
 80005a8:	4b07      	ldr	r3, [pc, #28]	@ (80005c8 <SysTick_Handler+0x2c>)
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	3b01      	subs	r3, #1
 80005ae:	4a06      	ldr	r2, [pc, #24]	@ (80005c8 <SysTick_Handler+0x2c>)
 80005b0:	6013      	str	r3, [r2, #0]
    millis++;
 80005b2:	4b06      	ldr	r3, [pc, #24]	@ (80005cc <SysTick_Handler+0x30>)
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	3301      	adds	r3, #1
 80005b8:	4a04      	ldr	r2, [pc, #16]	@ (80005cc <SysTick_Handler+0x30>)
 80005ba:	6013      	str	r3, [r2, #0]
}
 80005bc:	bf00      	nop
 80005be:	46bd      	mov	sp, r7
 80005c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c4:	4770      	bx	lr
 80005c6:	bf00      	nop
 80005c8:	20000098 	.word	0x20000098
 80005cc:	2000009c 	.word	0x2000009c

080005d0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80005d0:	b580      	push	{r7, lr}
 80005d2:	b086      	sub	sp, #24
 80005d4:	af00      	add	r7, sp, #0
 80005d6:	60f8      	str	r0, [r7, #12]
 80005d8:	60b9      	str	r1, [r7, #8]
 80005da:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005dc:	2300      	movs	r3, #0
 80005de:	617b      	str	r3, [r7, #20]
 80005e0:	e00a      	b.n	80005f8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80005e2:	f3af 8000 	nop.w
 80005e6:	4601      	mov	r1, r0
 80005e8:	68bb      	ldr	r3, [r7, #8]
 80005ea:	1c5a      	adds	r2, r3, #1
 80005ec:	60ba      	str	r2, [r7, #8]
 80005ee:	b2ca      	uxtb	r2, r1
 80005f0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005f2:	697b      	ldr	r3, [r7, #20]
 80005f4:	3301      	adds	r3, #1
 80005f6:	617b      	str	r3, [r7, #20]
 80005f8:	697a      	ldr	r2, [r7, #20]
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	429a      	cmp	r2, r3
 80005fe:	dbf0      	blt.n	80005e2 <_read+0x12>
  }

  return len;
 8000600:	687b      	ldr	r3, [r7, #4]
}
 8000602:	4618      	mov	r0, r3
 8000604:	3718      	adds	r7, #24
 8000606:	46bd      	mov	sp, r7
 8000608:	bd80      	pop	{r7, pc}

0800060a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800060a:	b580      	push	{r7, lr}
 800060c:	b086      	sub	sp, #24
 800060e:	af00      	add	r7, sp, #0
 8000610:	60f8      	str	r0, [r7, #12]
 8000612:	60b9      	str	r1, [r7, #8]
 8000614:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000616:	2300      	movs	r3, #0
 8000618:	617b      	str	r3, [r7, #20]
 800061a:	e009      	b.n	8000630 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800061c:	68bb      	ldr	r3, [r7, #8]
 800061e:	1c5a      	adds	r2, r3, #1
 8000620:	60ba      	str	r2, [r7, #8]
 8000622:	781b      	ldrb	r3, [r3, #0]
 8000624:	4618      	mov	r0, r3
 8000626:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800062a:	697b      	ldr	r3, [r7, #20]
 800062c:	3301      	adds	r3, #1
 800062e:	617b      	str	r3, [r7, #20]
 8000630:	697a      	ldr	r2, [r7, #20]
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	429a      	cmp	r2, r3
 8000636:	dbf1      	blt.n	800061c <_write+0x12>
  }
  return len;
 8000638:	687b      	ldr	r3, [r7, #4]
}
 800063a:	4618      	mov	r0, r3
 800063c:	3718      	adds	r7, #24
 800063e:	46bd      	mov	sp, r7
 8000640:	bd80      	pop	{r7, pc}

08000642 <_close>:

int _close(int file)
{
 8000642:	b480      	push	{r7}
 8000644:	b083      	sub	sp, #12
 8000646:	af00      	add	r7, sp, #0
 8000648:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800064a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800064e:	4618      	mov	r0, r3
 8000650:	370c      	adds	r7, #12
 8000652:	46bd      	mov	sp, r7
 8000654:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000658:	4770      	bx	lr

0800065a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800065a:	b480      	push	{r7}
 800065c:	b083      	sub	sp, #12
 800065e:	af00      	add	r7, sp, #0
 8000660:	6078      	str	r0, [r7, #4]
 8000662:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000664:	683b      	ldr	r3, [r7, #0]
 8000666:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800066a:	605a      	str	r2, [r3, #4]
  return 0;
 800066c:	2300      	movs	r3, #0
}
 800066e:	4618      	mov	r0, r3
 8000670:	370c      	adds	r7, #12
 8000672:	46bd      	mov	sp, r7
 8000674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000678:	4770      	bx	lr

0800067a <_isatty>:

int _isatty(int file)
{
 800067a:	b480      	push	{r7}
 800067c:	b083      	sub	sp, #12
 800067e:	af00      	add	r7, sp, #0
 8000680:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000682:	2301      	movs	r3, #1
}
 8000684:	4618      	mov	r0, r3
 8000686:	370c      	adds	r7, #12
 8000688:	46bd      	mov	sp, r7
 800068a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800068e:	4770      	bx	lr

08000690 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000690:	b480      	push	{r7}
 8000692:	b085      	sub	sp, #20
 8000694:	af00      	add	r7, sp, #0
 8000696:	60f8      	str	r0, [r7, #12]
 8000698:	60b9      	str	r1, [r7, #8]
 800069a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800069c:	2300      	movs	r3, #0
}
 800069e:	4618      	mov	r0, r3
 80006a0:	3714      	adds	r7, #20
 80006a2:	46bd      	mov	sp, r7
 80006a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006a8:	4770      	bx	lr
	...

080006ac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80006ac:	b580      	push	{r7, lr}
 80006ae:	b086      	sub	sp, #24
 80006b0:	af00      	add	r7, sp, #0
 80006b2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80006b4:	4a14      	ldr	r2, [pc, #80]	@ (8000708 <_sbrk+0x5c>)
 80006b6:	4b15      	ldr	r3, [pc, #84]	@ (800070c <_sbrk+0x60>)
 80006b8:	1ad3      	subs	r3, r2, r3
 80006ba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80006bc:	697b      	ldr	r3, [r7, #20]
 80006be:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80006c0:	4b13      	ldr	r3, [pc, #76]	@ (8000710 <_sbrk+0x64>)
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	d102      	bne.n	80006ce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80006c8:	4b11      	ldr	r3, [pc, #68]	@ (8000710 <_sbrk+0x64>)
 80006ca:	4a12      	ldr	r2, [pc, #72]	@ (8000714 <_sbrk+0x68>)
 80006cc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80006ce:	4b10      	ldr	r3, [pc, #64]	@ (8000710 <_sbrk+0x64>)
 80006d0:	681a      	ldr	r2, [r3, #0]
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	4413      	add	r3, r2
 80006d6:	693a      	ldr	r2, [r7, #16]
 80006d8:	429a      	cmp	r2, r3
 80006da:	d207      	bcs.n	80006ec <_sbrk+0x40>
  {
    errno = ENOMEM;
 80006dc:	f000 f9ac 	bl	8000a38 <__errno>
 80006e0:	4603      	mov	r3, r0
 80006e2:	220c      	movs	r2, #12
 80006e4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80006e6:	f04f 33ff 	mov.w	r3, #4294967295
 80006ea:	e009      	b.n	8000700 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80006ec:	4b08      	ldr	r3, [pc, #32]	@ (8000710 <_sbrk+0x64>)
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80006f2:	4b07      	ldr	r3, [pc, #28]	@ (8000710 <_sbrk+0x64>)
 80006f4:	681a      	ldr	r2, [r3, #0]
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	4413      	add	r3, r2
 80006fa:	4a05      	ldr	r2, [pc, #20]	@ (8000710 <_sbrk+0x64>)
 80006fc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80006fe:	68fb      	ldr	r3, [r7, #12]
}
 8000700:	4618      	mov	r0, r3
 8000702:	3718      	adds	r7, #24
 8000704:	46bd      	mov	sp, r7
 8000706:	bd80      	pop	{r7, pc}
 8000708:	20020000 	.word	0x20020000
 800070c:	00000400 	.word	0x00000400
 8000710:	200000a0 	.word	0x200000a0
 8000714:	200001f0 	.word	0x200001f0

08000718 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000718:	480d      	ldr	r0, [pc, #52]	@ (8000750 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800071a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800071c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000720:	480c      	ldr	r0, [pc, #48]	@ (8000754 <LoopForever+0x6>)
  ldr r1, =_edata
 8000722:	490d      	ldr	r1, [pc, #52]	@ (8000758 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000724:	4a0d      	ldr	r2, [pc, #52]	@ (800075c <LoopForever+0xe>)
  movs r3, #0
 8000726:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000728:	e002      	b.n	8000730 <LoopCopyDataInit>

0800072a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800072a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800072c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800072e:	3304      	adds	r3, #4

08000730 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000730:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000732:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000734:	d3f9      	bcc.n	800072a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000736:	4a0a      	ldr	r2, [pc, #40]	@ (8000760 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000738:	4c0a      	ldr	r4, [pc, #40]	@ (8000764 <LoopForever+0x16>)
  movs r3, #0
 800073a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800073c:	e001      	b.n	8000742 <LoopFillZerobss>

0800073e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800073e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000740:	3204      	adds	r2, #4

08000742 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000742:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000744:	d3fb      	bcc.n	800073e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000746:	f000 f97d 	bl	8000a44 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800074a:	f7ff fddb 	bl	8000304 <main>

0800074e <LoopForever>:

LoopForever:
  b LoopForever
 800074e:	e7fe      	b.n	800074e <LoopForever>
  ldr   r0, =_estack
 8000750:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000754:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000758:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 800075c:	0800162c 	.word	0x0800162c
  ldr r2, =_sbss
 8000760:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 8000764:	200001f0 	.word	0x200001f0

08000768 <BusFault_Handler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000768:	e7fe      	b.n	8000768 <BusFault_Handler>
	...

0800076c <std>:
 800076c:	2300      	movs	r3, #0
 800076e:	b510      	push	{r4, lr}
 8000770:	4604      	mov	r4, r0
 8000772:	e9c0 3300 	strd	r3, r3, [r0]
 8000776:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800077a:	6083      	str	r3, [r0, #8]
 800077c:	8181      	strh	r1, [r0, #12]
 800077e:	6643      	str	r3, [r0, #100]	@ 0x64
 8000780:	81c2      	strh	r2, [r0, #14]
 8000782:	6183      	str	r3, [r0, #24]
 8000784:	4619      	mov	r1, r3
 8000786:	2208      	movs	r2, #8
 8000788:	305c      	adds	r0, #92	@ 0x5c
 800078a:	f000 f906 	bl	800099a <memset>
 800078e:	4b0d      	ldr	r3, [pc, #52]	@ (80007c4 <std+0x58>)
 8000790:	6263      	str	r3, [r4, #36]	@ 0x24
 8000792:	4b0d      	ldr	r3, [pc, #52]	@ (80007c8 <std+0x5c>)
 8000794:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000796:	4b0d      	ldr	r3, [pc, #52]	@ (80007cc <std+0x60>)
 8000798:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800079a:	4b0d      	ldr	r3, [pc, #52]	@ (80007d0 <std+0x64>)
 800079c:	6323      	str	r3, [r4, #48]	@ 0x30
 800079e:	4b0d      	ldr	r3, [pc, #52]	@ (80007d4 <std+0x68>)
 80007a0:	6224      	str	r4, [r4, #32]
 80007a2:	429c      	cmp	r4, r3
 80007a4:	d006      	beq.n	80007b4 <std+0x48>
 80007a6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80007aa:	4294      	cmp	r4, r2
 80007ac:	d002      	beq.n	80007b4 <std+0x48>
 80007ae:	33d0      	adds	r3, #208	@ 0xd0
 80007b0:	429c      	cmp	r4, r3
 80007b2:	d105      	bne.n	80007c0 <std+0x54>
 80007b4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80007b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007bc:	f000 b966 	b.w	8000a8c <__retarget_lock_init_recursive>
 80007c0:	bd10      	pop	{r4, pc}
 80007c2:	bf00      	nop
 80007c4:	08000915 	.word	0x08000915
 80007c8:	08000937 	.word	0x08000937
 80007cc:	0800096f 	.word	0x0800096f
 80007d0:	08000993 	.word	0x08000993
 80007d4:	200000a4 	.word	0x200000a4

080007d8 <stdio_exit_handler>:
 80007d8:	4a02      	ldr	r2, [pc, #8]	@ (80007e4 <stdio_exit_handler+0xc>)
 80007da:	4903      	ldr	r1, [pc, #12]	@ (80007e8 <stdio_exit_handler+0x10>)
 80007dc:	4803      	ldr	r0, [pc, #12]	@ (80007ec <stdio_exit_handler+0x14>)
 80007de:	f000 b869 	b.w	80008b4 <_fwalk_sglue>
 80007e2:	bf00      	nop
 80007e4:	2000000c 	.word	0x2000000c
 80007e8:	0800132d 	.word	0x0800132d
 80007ec:	2000001c 	.word	0x2000001c

080007f0 <cleanup_stdio>:
 80007f0:	6841      	ldr	r1, [r0, #4]
 80007f2:	4b0c      	ldr	r3, [pc, #48]	@ (8000824 <cleanup_stdio+0x34>)
 80007f4:	4299      	cmp	r1, r3
 80007f6:	b510      	push	{r4, lr}
 80007f8:	4604      	mov	r4, r0
 80007fa:	d001      	beq.n	8000800 <cleanup_stdio+0x10>
 80007fc:	f000 fd96 	bl	800132c <_fflush_r>
 8000800:	68a1      	ldr	r1, [r4, #8]
 8000802:	4b09      	ldr	r3, [pc, #36]	@ (8000828 <cleanup_stdio+0x38>)
 8000804:	4299      	cmp	r1, r3
 8000806:	d002      	beq.n	800080e <cleanup_stdio+0x1e>
 8000808:	4620      	mov	r0, r4
 800080a:	f000 fd8f 	bl	800132c <_fflush_r>
 800080e:	68e1      	ldr	r1, [r4, #12]
 8000810:	4b06      	ldr	r3, [pc, #24]	@ (800082c <cleanup_stdio+0x3c>)
 8000812:	4299      	cmp	r1, r3
 8000814:	d004      	beq.n	8000820 <cleanup_stdio+0x30>
 8000816:	4620      	mov	r0, r4
 8000818:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800081c:	f000 bd86 	b.w	800132c <_fflush_r>
 8000820:	bd10      	pop	{r4, pc}
 8000822:	bf00      	nop
 8000824:	200000a4 	.word	0x200000a4
 8000828:	2000010c 	.word	0x2000010c
 800082c:	20000174 	.word	0x20000174

08000830 <global_stdio_init.part.0>:
 8000830:	b510      	push	{r4, lr}
 8000832:	4b0b      	ldr	r3, [pc, #44]	@ (8000860 <global_stdio_init.part.0+0x30>)
 8000834:	4c0b      	ldr	r4, [pc, #44]	@ (8000864 <global_stdio_init.part.0+0x34>)
 8000836:	4a0c      	ldr	r2, [pc, #48]	@ (8000868 <global_stdio_init.part.0+0x38>)
 8000838:	601a      	str	r2, [r3, #0]
 800083a:	4620      	mov	r0, r4
 800083c:	2200      	movs	r2, #0
 800083e:	2104      	movs	r1, #4
 8000840:	f7ff ff94 	bl	800076c <std>
 8000844:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000848:	2201      	movs	r2, #1
 800084a:	2109      	movs	r1, #9
 800084c:	f7ff ff8e 	bl	800076c <std>
 8000850:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000854:	2202      	movs	r2, #2
 8000856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800085a:	2112      	movs	r1, #18
 800085c:	f7ff bf86 	b.w	800076c <std>
 8000860:	200001dc 	.word	0x200001dc
 8000864:	200000a4 	.word	0x200000a4
 8000868:	080007d9 	.word	0x080007d9

0800086c <__sfp_lock_acquire>:
 800086c:	4801      	ldr	r0, [pc, #4]	@ (8000874 <__sfp_lock_acquire+0x8>)
 800086e:	f000 b90e 	b.w	8000a8e <__retarget_lock_acquire_recursive>
 8000872:	bf00      	nop
 8000874:	200001e5 	.word	0x200001e5

08000878 <__sfp_lock_release>:
 8000878:	4801      	ldr	r0, [pc, #4]	@ (8000880 <__sfp_lock_release+0x8>)
 800087a:	f000 b909 	b.w	8000a90 <__retarget_lock_release_recursive>
 800087e:	bf00      	nop
 8000880:	200001e5 	.word	0x200001e5

08000884 <__sinit>:
 8000884:	b510      	push	{r4, lr}
 8000886:	4604      	mov	r4, r0
 8000888:	f7ff fff0 	bl	800086c <__sfp_lock_acquire>
 800088c:	6a23      	ldr	r3, [r4, #32]
 800088e:	b11b      	cbz	r3, 8000898 <__sinit+0x14>
 8000890:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000894:	f7ff bff0 	b.w	8000878 <__sfp_lock_release>
 8000898:	4b04      	ldr	r3, [pc, #16]	@ (80008ac <__sinit+0x28>)
 800089a:	6223      	str	r3, [r4, #32]
 800089c:	4b04      	ldr	r3, [pc, #16]	@ (80008b0 <__sinit+0x2c>)
 800089e:	681b      	ldr	r3, [r3, #0]
 80008a0:	2b00      	cmp	r3, #0
 80008a2:	d1f5      	bne.n	8000890 <__sinit+0xc>
 80008a4:	f7ff ffc4 	bl	8000830 <global_stdio_init.part.0>
 80008a8:	e7f2      	b.n	8000890 <__sinit+0xc>
 80008aa:	bf00      	nop
 80008ac:	080007f1 	.word	0x080007f1
 80008b0:	200001dc 	.word	0x200001dc

080008b4 <_fwalk_sglue>:
 80008b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008b8:	4607      	mov	r7, r0
 80008ba:	4688      	mov	r8, r1
 80008bc:	4614      	mov	r4, r2
 80008be:	2600      	movs	r6, #0
 80008c0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80008c4:	f1b9 0901 	subs.w	r9, r9, #1
 80008c8:	d505      	bpl.n	80008d6 <_fwalk_sglue+0x22>
 80008ca:	6824      	ldr	r4, [r4, #0]
 80008cc:	2c00      	cmp	r4, #0
 80008ce:	d1f7      	bne.n	80008c0 <_fwalk_sglue+0xc>
 80008d0:	4630      	mov	r0, r6
 80008d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008d6:	89ab      	ldrh	r3, [r5, #12]
 80008d8:	2b01      	cmp	r3, #1
 80008da:	d907      	bls.n	80008ec <_fwalk_sglue+0x38>
 80008dc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80008e0:	3301      	adds	r3, #1
 80008e2:	d003      	beq.n	80008ec <_fwalk_sglue+0x38>
 80008e4:	4629      	mov	r1, r5
 80008e6:	4638      	mov	r0, r7
 80008e8:	47c0      	blx	r8
 80008ea:	4306      	orrs	r6, r0
 80008ec:	3568      	adds	r5, #104	@ 0x68
 80008ee:	e7e9      	b.n	80008c4 <_fwalk_sglue+0x10>

080008f0 <iprintf>:
 80008f0:	b40f      	push	{r0, r1, r2, r3}
 80008f2:	b507      	push	{r0, r1, r2, lr}
 80008f4:	4906      	ldr	r1, [pc, #24]	@ (8000910 <iprintf+0x20>)
 80008f6:	ab04      	add	r3, sp, #16
 80008f8:	6808      	ldr	r0, [r1, #0]
 80008fa:	f853 2b04 	ldr.w	r2, [r3], #4
 80008fe:	6881      	ldr	r1, [r0, #8]
 8000900:	9301      	str	r3, [sp, #4]
 8000902:	f000 f9e9 	bl	8000cd8 <_vfiprintf_r>
 8000906:	b003      	add	sp, #12
 8000908:	f85d eb04 	ldr.w	lr, [sp], #4
 800090c:	b004      	add	sp, #16
 800090e:	4770      	bx	lr
 8000910:	20000018 	.word	0x20000018

08000914 <__sread>:
 8000914:	b510      	push	{r4, lr}
 8000916:	460c      	mov	r4, r1
 8000918:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800091c:	f000 f868 	bl	80009f0 <_read_r>
 8000920:	2800      	cmp	r0, #0
 8000922:	bfab      	itete	ge
 8000924:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000926:	89a3      	ldrhlt	r3, [r4, #12]
 8000928:	181b      	addge	r3, r3, r0
 800092a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800092e:	bfac      	ite	ge
 8000930:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000932:	81a3      	strhlt	r3, [r4, #12]
 8000934:	bd10      	pop	{r4, pc}

08000936 <__swrite>:
 8000936:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800093a:	461f      	mov	r7, r3
 800093c:	898b      	ldrh	r3, [r1, #12]
 800093e:	05db      	lsls	r3, r3, #23
 8000940:	4605      	mov	r5, r0
 8000942:	460c      	mov	r4, r1
 8000944:	4616      	mov	r6, r2
 8000946:	d505      	bpl.n	8000954 <__swrite+0x1e>
 8000948:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800094c:	2302      	movs	r3, #2
 800094e:	2200      	movs	r2, #0
 8000950:	f000 f83c 	bl	80009cc <_lseek_r>
 8000954:	89a3      	ldrh	r3, [r4, #12]
 8000956:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800095a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800095e:	81a3      	strh	r3, [r4, #12]
 8000960:	4632      	mov	r2, r6
 8000962:	463b      	mov	r3, r7
 8000964:	4628      	mov	r0, r5
 8000966:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800096a:	f000 b853 	b.w	8000a14 <_write_r>

0800096e <__sseek>:
 800096e:	b510      	push	{r4, lr}
 8000970:	460c      	mov	r4, r1
 8000972:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000976:	f000 f829 	bl	80009cc <_lseek_r>
 800097a:	1c43      	adds	r3, r0, #1
 800097c:	89a3      	ldrh	r3, [r4, #12]
 800097e:	bf15      	itete	ne
 8000980:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000982:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000986:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800098a:	81a3      	strheq	r3, [r4, #12]
 800098c:	bf18      	it	ne
 800098e:	81a3      	strhne	r3, [r4, #12]
 8000990:	bd10      	pop	{r4, pc}

08000992 <__sclose>:
 8000992:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000996:	f000 b809 	b.w	80009ac <_close_r>

0800099a <memset>:
 800099a:	4402      	add	r2, r0
 800099c:	4603      	mov	r3, r0
 800099e:	4293      	cmp	r3, r2
 80009a0:	d100      	bne.n	80009a4 <memset+0xa>
 80009a2:	4770      	bx	lr
 80009a4:	f803 1b01 	strb.w	r1, [r3], #1
 80009a8:	e7f9      	b.n	800099e <memset+0x4>
	...

080009ac <_close_r>:
 80009ac:	b538      	push	{r3, r4, r5, lr}
 80009ae:	4d06      	ldr	r5, [pc, #24]	@ (80009c8 <_close_r+0x1c>)
 80009b0:	2300      	movs	r3, #0
 80009b2:	4604      	mov	r4, r0
 80009b4:	4608      	mov	r0, r1
 80009b6:	602b      	str	r3, [r5, #0]
 80009b8:	f7ff fe43 	bl	8000642 <_close>
 80009bc:	1c43      	adds	r3, r0, #1
 80009be:	d102      	bne.n	80009c6 <_close_r+0x1a>
 80009c0:	682b      	ldr	r3, [r5, #0]
 80009c2:	b103      	cbz	r3, 80009c6 <_close_r+0x1a>
 80009c4:	6023      	str	r3, [r4, #0]
 80009c6:	bd38      	pop	{r3, r4, r5, pc}
 80009c8:	200001e0 	.word	0x200001e0

080009cc <_lseek_r>:
 80009cc:	b538      	push	{r3, r4, r5, lr}
 80009ce:	4d07      	ldr	r5, [pc, #28]	@ (80009ec <_lseek_r+0x20>)
 80009d0:	4604      	mov	r4, r0
 80009d2:	4608      	mov	r0, r1
 80009d4:	4611      	mov	r1, r2
 80009d6:	2200      	movs	r2, #0
 80009d8:	602a      	str	r2, [r5, #0]
 80009da:	461a      	mov	r2, r3
 80009dc:	f7ff fe58 	bl	8000690 <_lseek>
 80009e0:	1c43      	adds	r3, r0, #1
 80009e2:	d102      	bne.n	80009ea <_lseek_r+0x1e>
 80009e4:	682b      	ldr	r3, [r5, #0]
 80009e6:	b103      	cbz	r3, 80009ea <_lseek_r+0x1e>
 80009e8:	6023      	str	r3, [r4, #0]
 80009ea:	bd38      	pop	{r3, r4, r5, pc}
 80009ec:	200001e0 	.word	0x200001e0

080009f0 <_read_r>:
 80009f0:	b538      	push	{r3, r4, r5, lr}
 80009f2:	4d07      	ldr	r5, [pc, #28]	@ (8000a10 <_read_r+0x20>)
 80009f4:	4604      	mov	r4, r0
 80009f6:	4608      	mov	r0, r1
 80009f8:	4611      	mov	r1, r2
 80009fa:	2200      	movs	r2, #0
 80009fc:	602a      	str	r2, [r5, #0]
 80009fe:	461a      	mov	r2, r3
 8000a00:	f7ff fde6 	bl	80005d0 <_read>
 8000a04:	1c43      	adds	r3, r0, #1
 8000a06:	d102      	bne.n	8000a0e <_read_r+0x1e>
 8000a08:	682b      	ldr	r3, [r5, #0]
 8000a0a:	b103      	cbz	r3, 8000a0e <_read_r+0x1e>
 8000a0c:	6023      	str	r3, [r4, #0]
 8000a0e:	bd38      	pop	{r3, r4, r5, pc}
 8000a10:	200001e0 	.word	0x200001e0

08000a14 <_write_r>:
 8000a14:	b538      	push	{r3, r4, r5, lr}
 8000a16:	4d07      	ldr	r5, [pc, #28]	@ (8000a34 <_write_r+0x20>)
 8000a18:	4604      	mov	r4, r0
 8000a1a:	4608      	mov	r0, r1
 8000a1c:	4611      	mov	r1, r2
 8000a1e:	2200      	movs	r2, #0
 8000a20:	602a      	str	r2, [r5, #0]
 8000a22:	461a      	mov	r2, r3
 8000a24:	f7ff fdf1 	bl	800060a <_write>
 8000a28:	1c43      	adds	r3, r0, #1
 8000a2a:	d102      	bne.n	8000a32 <_write_r+0x1e>
 8000a2c:	682b      	ldr	r3, [r5, #0]
 8000a2e:	b103      	cbz	r3, 8000a32 <_write_r+0x1e>
 8000a30:	6023      	str	r3, [r4, #0]
 8000a32:	bd38      	pop	{r3, r4, r5, pc}
 8000a34:	200001e0 	.word	0x200001e0

08000a38 <__errno>:
 8000a38:	4b01      	ldr	r3, [pc, #4]	@ (8000a40 <__errno+0x8>)
 8000a3a:	6818      	ldr	r0, [r3, #0]
 8000a3c:	4770      	bx	lr
 8000a3e:	bf00      	nop
 8000a40:	20000018 	.word	0x20000018

08000a44 <__libc_init_array>:
 8000a44:	b570      	push	{r4, r5, r6, lr}
 8000a46:	4d0d      	ldr	r5, [pc, #52]	@ (8000a7c <__libc_init_array+0x38>)
 8000a48:	4c0d      	ldr	r4, [pc, #52]	@ (8000a80 <__libc_init_array+0x3c>)
 8000a4a:	1b64      	subs	r4, r4, r5
 8000a4c:	10a4      	asrs	r4, r4, #2
 8000a4e:	2600      	movs	r6, #0
 8000a50:	42a6      	cmp	r6, r4
 8000a52:	d109      	bne.n	8000a68 <__libc_init_array+0x24>
 8000a54:	4d0b      	ldr	r5, [pc, #44]	@ (8000a84 <__libc_init_array+0x40>)
 8000a56:	4c0c      	ldr	r4, [pc, #48]	@ (8000a88 <__libc_init_array+0x44>)
 8000a58:	f000 fdb8 	bl	80015cc <_init>
 8000a5c:	1b64      	subs	r4, r4, r5
 8000a5e:	10a4      	asrs	r4, r4, #2
 8000a60:	2600      	movs	r6, #0
 8000a62:	42a6      	cmp	r6, r4
 8000a64:	d105      	bne.n	8000a72 <__libc_init_array+0x2e>
 8000a66:	bd70      	pop	{r4, r5, r6, pc}
 8000a68:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a6c:	4798      	blx	r3
 8000a6e:	3601      	adds	r6, #1
 8000a70:	e7ee      	b.n	8000a50 <__libc_init_array+0xc>
 8000a72:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a76:	4798      	blx	r3
 8000a78:	3601      	adds	r6, #1
 8000a7a:	e7f2      	b.n	8000a62 <__libc_init_array+0x1e>
 8000a7c:	08001624 	.word	0x08001624
 8000a80:	08001624 	.word	0x08001624
 8000a84:	08001624 	.word	0x08001624
 8000a88:	08001628 	.word	0x08001628

08000a8c <__retarget_lock_init_recursive>:
 8000a8c:	4770      	bx	lr

08000a8e <__retarget_lock_acquire_recursive>:
 8000a8e:	4770      	bx	lr

08000a90 <__retarget_lock_release_recursive>:
 8000a90:	4770      	bx	lr
	...

08000a94 <_free_r>:
 8000a94:	b538      	push	{r3, r4, r5, lr}
 8000a96:	4605      	mov	r5, r0
 8000a98:	2900      	cmp	r1, #0
 8000a9a:	d041      	beq.n	8000b20 <_free_r+0x8c>
 8000a9c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000aa0:	1f0c      	subs	r4, r1, #4
 8000aa2:	2b00      	cmp	r3, #0
 8000aa4:	bfb8      	it	lt
 8000aa6:	18e4      	addlt	r4, r4, r3
 8000aa8:	f000 f8e0 	bl	8000c6c <__malloc_lock>
 8000aac:	4a1d      	ldr	r2, [pc, #116]	@ (8000b24 <_free_r+0x90>)
 8000aae:	6813      	ldr	r3, [r2, #0]
 8000ab0:	b933      	cbnz	r3, 8000ac0 <_free_r+0x2c>
 8000ab2:	6063      	str	r3, [r4, #4]
 8000ab4:	6014      	str	r4, [r2, #0]
 8000ab6:	4628      	mov	r0, r5
 8000ab8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000abc:	f000 b8dc 	b.w	8000c78 <__malloc_unlock>
 8000ac0:	42a3      	cmp	r3, r4
 8000ac2:	d908      	bls.n	8000ad6 <_free_r+0x42>
 8000ac4:	6820      	ldr	r0, [r4, #0]
 8000ac6:	1821      	adds	r1, r4, r0
 8000ac8:	428b      	cmp	r3, r1
 8000aca:	bf01      	itttt	eq
 8000acc:	6819      	ldreq	r1, [r3, #0]
 8000ace:	685b      	ldreq	r3, [r3, #4]
 8000ad0:	1809      	addeq	r1, r1, r0
 8000ad2:	6021      	streq	r1, [r4, #0]
 8000ad4:	e7ed      	b.n	8000ab2 <_free_r+0x1e>
 8000ad6:	461a      	mov	r2, r3
 8000ad8:	685b      	ldr	r3, [r3, #4]
 8000ada:	b10b      	cbz	r3, 8000ae0 <_free_r+0x4c>
 8000adc:	42a3      	cmp	r3, r4
 8000ade:	d9fa      	bls.n	8000ad6 <_free_r+0x42>
 8000ae0:	6811      	ldr	r1, [r2, #0]
 8000ae2:	1850      	adds	r0, r2, r1
 8000ae4:	42a0      	cmp	r0, r4
 8000ae6:	d10b      	bne.n	8000b00 <_free_r+0x6c>
 8000ae8:	6820      	ldr	r0, [r4, #0]
 8000aea:	4401      	add	r1, r0
 8000aec:	1850      	adds	r0, r2, r1
 8000aee:	4283      	cmp	r3, r0
 8000af0:	6011      	str	r1, [r2, #0]
 8000af2:	d1e0      	bne.n	8000ab6 <_free_r+0x22>
 8000af4:	6818      	ldr	r0, [r3, #0]
 8000af6:	685b      	ldr	r3, [r3, #4]
 8000af8:	6053      	str	r3, [r2, #4]
 8000afa:	4408      	add	r0, r1
 8000afc:	6010      	str	r0, [r2, #0]
 8000afe:	e7da      	b.n	8000ab6 <_free_r+0x22>
 8000b00:	d902      	bls.n	8000b08 <_free_r+0x74>
 8000b02:	230c      	movs	r3, #12
 8000b04:	602b      	str	r3, [r5, #0]
 8000b06:	e7d6      	b.n	8000ab6 <_free_r+0x22>
 8000b08:	6820      	ldr	r0, [r4, #0]
 8000b0a:	1821      	adds	r1, r4, r0
 8000b0c:	428b      	cmp	r3, r1
 8000b0e:	bf04      	itt	eq
 8000b10:	6819      	ldreq	r1, [r3, #0]
 8000b12:	685b      	ldreq	r3, [r3, #4]
 8000b14:	6063      	str	r3, [r4, #4]
 8000b16:	bf04      	itt	eq
 8000b18:	1809      	addeq	r1, r1, r0
 8000b1a:	6021      	streq	r1, [r4, #0]
 8000b1c:	6054      	str	r4, [r2, #4]
 8000b1e:	e7ca      	b.n	8000ab6 <_free_r+0x22>
 8000b20:	bd38      	pop	{r3, r4, r5, pc}
 8000b22:	bf00      	nop
 8000b24:	200001ec 	.word	0x200001ec

08000b28 <sbrk_aligned>:
 8000b28:	b570      	push	{r4, r5, r6, lr}
 8000b2a:	4e0f      	ldr	r6, [pc, #60]	@ (8000b68 <sbrk_aligned+0x40>)
 8000b2c:	460c      	mov	r4, r1
 8000b2e:	6831      	ldr	r1, [r6, #0]
 8000b30:	4605      	mov	r5, r0
 8000b32:	b911      	cbnz	r1, 8000b3a <sbrk_aligned+0x12>
 8000b34:	f000 fcb6 	bl	80014a4 <_sbrk_r>
 8000b38:	6030      	str	r0, [r6, #0]
 8000b3a:	4621      	mov	r1, r4
 8000b3c:	4628      	mov	r0, r5
 8000b3e:	f000 fcb1 	bl	80014a4 <_sbrk_r>
 8000b42:	1c43      	adds	r3, r0, #1
 8000b44:	d103      	bne.n	8000b4e <sbrk_aligned+0x26>
 8000b46:	f04f 34ff 	mov.w	r4, #4294967295
 8000b4a:	4620      	mov	r0, r4
 8000b4c:	bd70      	pop	{r4, r5, r6, pc}
 8000b4e:	1cc4      	adds	r4, r0, #3
 8000b50:	f024 0403 	bic.w	r4, r4, #3
 8000b54:	42a0      	cmp	r0, r4
 8000b56:	d0f8      	beq.n	8000b4a <sbrk_aligned+0x22>
 8000b58:	1a21      	subs	r1, r4, r0
 8000b5a:	4628      	mov	r0, r5
 8000b5c:	f000 fca2 	bl	80014a4 <_sbrk_r>
 8000b60:	3001      	adds	r0, #1
 8000b62:	d1f2      	bne.n	8000b4a <sbrk_aligned+0x22>
 8000b64:	e7ef      	b.n	8000b46 <sbrk_aligned+0x1e>
 8000b66:	bf00      	nop
 8000b68:	200001e8 	.word	0x200001e8

08000b6c <_malloc_r>:
 8000b6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b70:	1ccd      	adds	r5, r1, #3
 8000b72:	f025 0503 	bic.w	r5, r5, #3
 8000b76:	3508      	adds	r5, #8
 8000b78:	2d0c      	cmp	r5, #12
 8000b7a:	bf38      	it	cc
 8000b7c:	250c      	movcc	r5, #12
 8000b7e:	2d00      	cmp	r5, #0
 8000b80:	4606      	mov	r6, r0
 8000b82:	db01      	blt.n	8000b88 <_malloc_r+0x1c>
 8000b84:	42a9      	cmp	r1, r5
 8000b86:	d904      	bls.n	8000b92 <_malloc_r+0x26>
 8000b88:	230c      	movs	r3, #12
 8000b8a:	6033      	str	r3, [r6, #0]
 8000b8c:	2000      	movs	r0, #0
 8000b8e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b92:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000c68 <_malloc_r+0xfc>
 8000b96:	f000 f869 	bl	8000c6c <__malloc_lock>
 8000b9a:	f8d8 3000 	ldr.w	r3, [r8]
 8000b9e:	461c      	mov	r4, r3
 8000ba0:	bb44      	cbnz	r4, 8000bf4 <_malloc_r+0x88>
 8000ba2:	4629      	mov	r1, r5
 8000ba4:	4630      	mov	r0, r6
 8000ba6:	f7ff ffbf 	bl	8000b28 <sbrk_aligned>
 8000baa:	1c43      	adds	r3, r0, #1
 8000bac:	4604      	mov	r4, r0
 8000bae:	d158      	bne.n	8000c62 <_malloc_r+0xf6>
 8000bb0:	f8d8 4000 	ldr.w	r4, [r8]
 8000bb4:	4627      	mov	r7, r4
 8000bb6:	2f00      	cmp	r7, #0
 8000bb8:	d143      	bne.n	8000c42 <_malloc_r+0xd6>
 8000bba:	2c00      	cmp	r4, #0
 8000bbc:	d04b      	beq.n	8000c56 <_malloc_r+0xea>
 8000bbe:	6823      	ldr	r3, [r4, #0]
 8000bc0:	4639      	mov	r1, r7
 8000bc2:	4630      	mov	r0, r6
 8000bc4:	eb04 0903 	add.w	r9, r4, r3
 8000bc8:	f000 fc6c 	bl	80014a4 <_sbrk_r>
 8000bcc:	4581      	cmp	r9, r0
 8000bce:	d142      	bne.n	8000c56 <_malloc_r+0xea>
 8000bd0:	6821      	ldr	r1, [r4, #0]
 8000bd2:	1a6d      	subs	r5, r5, r1
 8000bd4:	4629      	mov	r1, r5
 8000bd6:	4630      	mov	r0, r6
 8000bd8:	f7ff ffa6 	bl	8000b28 <sbrk_aligned>
 8000bdc:	3001      	adds	r0, #1
 8000bde:	d03a      	beq.n	8000c56 <_malloc_r+0xea>
 8000be0:	6823      	ldr	r3, [r4, #0]
 8000be2:	442b      	add	r3, r5
 8000be4:	6023      	str	r3, [r4, #0]
 8000be6:	f8d8 3000 	ldr.w	r3, [r8]
 8000bea:	685a      	ldr	r2, [r3, #4]
 8000bec:	bb62      	cbnz	r2, 8000c48 <_malloc_r+0xdc>
 8000bee:	f8c8 7000 	str.w	r7, [r8]
 8000bf2:	e00f      	b.n	8000c14 <_malloc_r+0xa8>
 8000bf4:	6822      	ldr	r2, [r4, #0]
 8000bf6:	1b52      	subs	r2, r2, r5
 8000bf8:	d420      	bmi.n	8000c3c <_malloc_r+0xd0>
 8000bfa:	2a0b      	cmp	r2, #11
 8000bfc:	d917      	bls.n	8000c2e <_malloc_r+0xc2>
 8000bfe:	1961      	adds	r1, r4, r5
 8000c00:	42a3      	cmp	r3, r4
 8000c02:	6025      	str	r5, [r4, #0]
 8000c04:	bf18      	it	ne
 8000c06:	6059      	strne	r1, [r3, #4]
 8000c08:	6863      	ldr	r3, [r4, #4]
 8000c0a:	bf08      	it	eq
 8000c0c:	f8c8 1000 	streq.w	r1, [r8]
 8000c10:	5162      	str	r2, [r4, r5]
 8000c12:	604b      	str	r3, [r1, #4]
 8000c14:	4630      	mov	r0, r6
 8000c16:	f000 f82f 	bl	8000c78 <__malloc_unlock>
 8000c1a:	f104 000b 	add.w	r0, r4, #11
 8000c1e:	1d23      	adds	r3, r4, #4
 8000c20:	f020 0007 	bic.w	r0, r0, #7
 8000c24:	1ac2      	subs	r2, r0, r3
 8000c26:	bf1c      	itt	ne
 8000c28:	1a1b      	subne	r3, r3, r0
 8000c2a:	50a3      	strne	r3, [r4, r2]
 8000c2c:	e7af      	b.n	8000b8e <_malloc_r+0x22>
 8000c2e:	6862      	ldr	r2, [r4, #4]
 8000c30:	42a3      	cmp	r3, r4
 8000c32:	bf0c      	ite	eq
 8000c34:	f8c8 2000 	streq.w	r2, [r8]
 8000c38:	605a      	strne	r2, [r3, #4]
 8000c3a:	e7eb      	b.n	8000c14 <_malloc_r+0xa8>
 8000c3c:	4623      	mov	r3, r4
 8000c3e:	6864      	ldr	r4, [r4, #4]
 8000c40:	e7ae      	b.n	8000ba0 <_malloc_r+0x34>
 8000c42:	463c      	mov	r4, r7
 8000c44:	687f      	ldr	r7, [r7, #4]
 8000c46:	e7b6      	b.n	8000bb6 <_malloc_r+0x4a>
 8000c48:	461a      	mov	r2, r3
 8000c4a:	685b      	ldr	r3, [r3, #4]
 8000c4c:	42a3      	cmp	r3, r4
 8000c4e:	d1fb      	bne.n	8000c48 <_malloc_r+0xdc>
 8000c50:	2300      	movs	r3, #0
 8000c52:	6053      	str	r3, [r2, #4]
 8000c54:	e7de      	b.n	8000c14 <_malloc_r+0xa8>
 8000c56:	230c      	movs	r3, #12
 8000c58:	6033      	str	r3, [r6, #0]
 8000c5a:	4630      	mov	r0, r6
 8000c5c:	f000 f80c 	bl	8000c78 <__malloc_unlock>
 8000c60:	e794      	b.n	8000b8c <_malloc_r+0x20>
 8000c62:	6005      	str	r5, [r0, #0]
 8000c64:	e7d6      	b.n	8000c14 <_malloc_r+0xa8>
 8000c66:	bf00      	nop
 8000c68:	200001ec 	.word	0x200001ec

08000c6c <__malloc_lock>:
 8000c6c:	4801      	ldr	r0, [pc, #4]	@ (8000c74 <__malloc_lock+0x8>)
 8000c6e:	f7ff bf0e 	b.w	8000a8e <__retarget_lock_acquire_recursive>
 8000c72:	bf00      	nop
 8000c74:	200001e4 	.word	0x200001e4

08000c78 <__malloc_unlock>:
 8000c78:	4801      	ldr	r0, [pc, #4]	@ (8000c80 <__malloc_unlock+0x8>)
 8000c7a:	f7ff bf09 	b.w	8000a90 <__retarget_lock_release_recursive>
 8000c7e:	bf00      	nop
 8000c80:	200001e4 	.word	0x200001e4

08000c84 <__sfputc_r>:
 8000c84:	6893      	ldr	r3, [r2, #8]
 8000c86:	3b01      	subs	r3, #1
 8000c88:	2b00      	cmp	r3, #0
 8000c8a:	b410      	push	{r4}
 8000c8c:	6093      	str	r3, [r2, #8]
 8000c8e:	da08      	bge.n	8000ca2 <__sfputc_r+0x1e>
 8000c90:	6994      	ldr	r4, [r2, #24]
 8000c92:	42a3      	cmp	r3, r4
 8000c94:	db01      	blt.n	8000c9a <__sfputc_r+0x16>
 8000c96:	290a      	cmp	r1, #10
 8000c98:	d103      	bne.n	8000ca2 <__sfputc_r+0x1e>
 8000c9a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c9e:	f000 bb6d 	b.w	800137c <__swbuf_r>
 8000ca2:	6813      	ldr	r3, [r2, #0]
 8000ca4:	1c58      	adds	r0, r3, #1
 8000ca6:	6010      	str	r0, [r2, #0]
 8000ca8:	7019      	strb	r1, [r3, #0]
 8000caa:	4608      	mov	r0, r1
 8000cac:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cb0:	4770      	bx	lr

08000cb2 <__sfputs_r>:
 8000cb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cb4:	4606      	mov	r6, r0
 8000cb6:	460f      	mov	r7, r1
 8000cb8:	4614      	mov	r4, r2
 8000cba:	18d5      	adds	r5, r2, r3
 8000cbc:	42ac      	cmp	r4, r5
 8000cbe:	d101      	bne.n	8000cc4 <__sfputs_r+0x12>
 8000cc0:	2000      	movs	r0, #0
 8000cc2:	e007      	b.n	8000cd4 <__sfputs_r+0x22>
 8000cc4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cc8:	463a      	mov	r2, r7
 8000cca:	4630      	mov	r0, r6
 8000ccc:	f7ff ffda 	bl	8000c84 <__sfputc_r>
 8000cd0:	1c43      	adds	r3, r0, #1
 8000cd2:	d1f3      	bne.n	8000cbc <__sfputs_r+0xa>
 8000cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cd8 <_vfiprintf_r>:
 8000cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cdc:	460d      	mov	r5, r1
 8000cde:	b09d      	sub	sp, #116	@ 0x74
 8000ce0:	4614      	mov	r4, r2
 8000ce2:	4698      	mov	r8, r3
 8000ce4:	4606      	mov	r6, r0
 8000ce6:	b118      	cbz	r0, 8000cf0 <_vfiprintf_r+0x18>
 8000ce8:	6a03      	ldr	r3, [r0, #32]
 8000cea:	b90b      	cbnz	r3, 8000cf0 <_vfiprintf_r+0x18>
 8000cec:	f7ff fdca 	bl	8000884 <__sinit>
 8000cf0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cf2:	07d9      	lsls	r1, r3, #31
 8000cf4:	d405      	bmi.n	8000d02 <_vfiprintf_r+0x2a>
 8000cf6:	89ab      	ldrh	r3, [r5, #12]
 8000cf8:	059a      	lsls	r2, r3, #22
 8000cfa:	d402      	bmi.n	8000d02 <_vfiprintf_r+0x2a>
 8000cfc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000cfe:	f7ff fec6 	bl	8000a8e <__retarget_lock_acquire_recursive>
 8000d02:	89ab      	ldrh	r3, [r5, #12]
 8000d04:	071b      	lsls	r3, r3, #28
 8000d06:	d501      	bpl.n	8000d0c <_vfiprintf_r+0x34>
 8000d08:	692b      	ldr	r3, [r5, #16]
 8000d0a:	b99b      	cbnz	r3, 8000d34 <_vfiprintf_r+0x5c>
 8000d0c:	4629      	mov	r1, r5
 8000d0e:	4630      	mov	r0, r6
 8000d10:	f000 fb72 	bl	80013f8 <__swsetup_r>
 8000d14:	b170      	cbz	r0, 8000d34 <_vfiprintf_r+0x5c>
 8000d16:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000d18:	07dc      	lsls	r4, r3, #31
 8000d1a:	d504      	bpl.n	8000d26 <_vfiprintf_r+0x4e>
 8000d1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d20:	b01d      	add	sp, #116	@ 0x74
 8000d22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d26:	89ab      	ldrh	r3, [r5, #12]
 8000d28:	0598      	lsls	r0, r3, #22
 8000d2a:	d4f7      	bmi.n	8000d1c <_vfiprintf_r+0x44>
 8000d2c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d2e:	f7ff feaf 	bl	8000a90 <__retarget_lock_release_recursive>
 8000d32:	e7f3      	b.n	8000d1c <_vfiprintf_r+0x44>
 8000d34:	2300      	movs	r3, #0
 8000d36:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d38:	2320      	movs	r3, #32
 8000d3a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000d3e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d42:	2330      	movs	r3, #48	@ 0x30
 8000d44:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000ef4 <_vfiprintf_r+0x21c>
 8000d48:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000d4c:	f04f 0901 	mov.w	r9, #1
 8000d50:	4623      	mov	r3, r4
 8000d52:	469a      	mov	sl, r3
 8000d54:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d58:	b10a      	cbz	r2, 8000d5e <_vfiprintf_r+0x86>
 8000d5a:	2a25      	cmp	r2, #37	@ 0x25
 8000d5c:	d1f9      	bne.n	8000d52 <_vfiprintf_r+0x7a>
 8000d5e:	ebba 0b04 	subs.w	fp, sl, r4
 8000d62:	d00b      	beq.n	8000d7c <_vfiprintf_r+0xa4>
 8000d64:	465b      	mov	r3, fp
 8000d66:	4622      	mov	r2, r4
 8000d68:	4629      	mov	r1, r5
 8000d6a:	4630      	mov	r0, r6
 8000d6c:	f7ff ffa1 	bl	8000cb2 <__sfputs_r>
 8000d70:	3001      	adds	r0, #1
 8000d72:	f000 80a7 	beq.w	8000ec4 <_vfiprintf_r+0x1ec>
 8000d76:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000d78:	445a      	add	r2, fp
 8000d7a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000d7c:	f89a 3000 	ldrb.w	r3, [sl]
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	f000 809f 	beq.w	8000ec4 <_vfiprintf_r+0x1ec>
 8000d86:	2300      	movs	r3, #0
 8000d88:	f04f 32ff 	mov.w	r2, #4294967295
 8000d8c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d90:	f10a 0a01 	add.w	sl, sl, #1
 8000d94:	9304      	str	r3, [sp, #16]
 8000d96:	9307      	str	r3, [sp, #28]
 8000d98:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000d9c:	931a      	str	r3, [sp, #104]	@ 0x68
 8000d9e:	4654      	mov	r4, sl
 8000da0:	2205      	movs	r2, #5
 8000da2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000da6:	4853      	ldr	r0, [pc, #332]	@ (8000ef4 <_vfiprintf_r+0x21c>)
 8000da8:	f7ff fa32 	bl	8000210 <memchr>
 8000dac:	9a04      	ldr	r2, [sp, #16]
 8000dae:	b9d8      	cbnz	r0, 8000de8 <_vfiprintf_r+0x110>
 8000db0:	06d1      	lsls	r1, r2, #27
 8000db2:	bf44      	itt	mi
 8000db4:	2320      	movmi	r3, #32
 8000db6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000dba:	0713      	lsls	r3, r2, #28
 8000dbc:	bf44      	itt	mi
 8000dbe:	232b      	movmi	r3, #43	@ 0x2b
 8000dc0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000dc4:	f89a 3000 	ldrb.w	r3, [sl]
 8000dc8:	2b2a      	cmp	r3, #42	@ 0x2a
 8000dca:	d015      	beq.n	8000df8 <_vfiprintf_r+0x120>
 8000dcc:	9a07      	ldr	r2, [sp, #28]
 8000dce:	4654      	mov	r4, sl
 8000dd0:	2000      	movs	r0, #0
 8000dd2:	f04f 0c0a 	mov.w	ip, #10
 8000dd6:	4621      	mov	r1, r4
 8000dd8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ddc:	3b30      	subs	r3, #48	@ 0x30
 8000dde:	2b09      	cmp	r3, #9
 8000de0:	d94b      	bls.n	8000e7a <_vfiprintf_r+0x1a2>
 8000de2:	b1b0      	cbz	r0, 8000e12 <_vfiprintf_r+0x13a>
 8000de4:	9207      	str	r2, [sp, #28]
 8000de6:	e014      	b.n	8000e12 <_vfiprintf_r+0x13a>
 8000de8:	eba0 0308 	sub.w	r3, r0, r8
 8000dec:	fa09 f303 	lsl.w	r3, r9, r3
 8000df0:	4313      	orrs	r3, r2
 8000df2:	9304      	str	r3, [sp, #16]
 8000df4:	46a2      	mov	sl, r4
 8000df6:	e7d2      	b.n	8000d9e <_vfiprintf_r+0xc6>
 8000df8:	9b03      	ldr	r3, [sp, #12]
 8000dfa:	1d19      	adds	r1, r3, #4
 8000dfc:	681b      	ldr	r3, [r3, #0]
 8000dfe:	9103      	str	r1, [sp, #12]
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	bfbb      	ittet	lt
 8000e04:	425b      	neglt	r3, r3
 8000e06:	f042 0202 	orrlt.w	r2, r2, #2
 8000e0a:	9307      	strge	r3, [sp, #28]
 8000e0c:	9307      	strlt	r3, [sp, #28]
 8000e0e:	bfb8      	it	lt
 8000e10:	9204      	strlt	r2, [sp, #16]
 8000e12:	7823      	ldrb	r3, [r4, #0]
 8000e14:	2b2e      	cmp	r3, #46	@ 0x2e
 8000e16:	d10a      	bne.n	8000e2e <_vfiprintf_r+0x156>
 8000e18:	7863      	ldrb	r3, [r4, #1]
 8000e1a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000e1c:	d132      	bne.n	8000e84 <_vfiprintf_r+0x1ac>
 8000e1e:	9b03      	ldr	r3, [sp, #12]
 8000e20:	1d1a      	adds	r2, r3, #4
 8000e22:	681b      	ldr	r3, [r3, #0]
 8000e24:	9203      	str	r2, [sp, #12]
 8000e26:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000e2a:	3402      	adds	r4, #2
 8000e2c:	9305      	str	r3, [sp, #20]
 8000e2e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000f04 <_vfiprintf_r+0x22c>
 8000e32:	7821      	ldrb	r1, [r4, #0]
 8000e34:	2203      	movs	r2, #3
 8000e36:	4650      	mov	r0, sl
 8000e38:	f7ff f9ea 	bl	8000210 <memchr>
 8000e3c:	b138      	cbz	r0, 8000e4e <_vfiprintf_r+0x176>
 8000e3e:	9b04      	ldr	r3, [sp, #16]
 8000e40:	eba0 000a 	sub.w	r0, r0, sl
 8000e44:	2240      	movs	r2, #64	@ 0x40
 8000e46:	4082      	lsls	r2, r0
 8000e48:	4313      	orrs	r3, r2
 8000e4a:	3401      	adds	r4, #1
 8000e4c:	9304      	str	r3, [sp, #16]
 8000e4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e52:	4829      	ldr	r0, [pc, #164]	@ (8000ef8 <_vfiprintf_r+0x220>)
 8000e54:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000e58:	2206      	movs	r2, #6
 8000e5a:	f7ff f9d9 	bl	8000210 <memchr>
 8000e5e:	2800      	cmp	r0, #0
 8000e60:	d03f      	beq.n	8000ee2 <_vfiprintf_r+0x20a>
 8000e62:	4b26      	ldr	r3, [pc, #152]	@ (8000efc <_vfiprintf_r+0x224>)
 8000e64:	bb1b      	cbnz	r3, 8000eae <_vfiprintf_r+0x1d6>
 8000e66:	9b03      	ldr	r3, [sp, #12]
 8000e68:	3307      	adds	r3, #7
 8000e6a:	f023 0307 	bic.w	r3, r3, #7
 8000e6e:	3308      	adds	r3, #8
 8000e70:	9303      	str	r3, [sp, #12]
 8000e72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000e74:	443b      	add	r3, r7
 8000e76:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e78:	e76a      	b.n	8000d50 <_vfiprintf_r+0x78>
 8000e7a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e7e:	460c      	mov	r4, r1
 8000e80:	2001      	movs	r0, #1
 8000e82:	e7a8      	b.n	8000dd6 <_vfiprintf_r+0xfe>
 8000e84:	2300      	movs	r3, #0
 8000e86:	3401      	adds	r4, #1
 8000e88:	9305      	str	r3, [sp, #20]
 8000e8a:	4619      	mov	r1, r3
 8000e8c:	f04f 0c0a 	mov.w	ip, #10
 8000e90:	4620      	mov	r0, r4
 8000e92:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e96:	3a30      	subs	r2, #48	@ 0x30
 8000e98:	2a09      	cmp	r2, #9
 8000e9a:	d903      	bls.n	8000ea4 <_vfiprintf_r+0x1cc>
 8000e9c:	2b00      	cmp	r3, #0
 8000e9e:	d0c6      	beq.n	8000e2e <_vfiprintf_r+0x156>
 8000ea0:	9105      	str	r1, [sp, #20]
 8000ea2:	e7c4      	b.n	8000e2e <_vfiprintf_r+0x156>
 8000ea4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ea8:	4604      	mov	r4, r0
 8000eaa:	2301      	movs	r3, #1
 8000eac:	e7f0      	b.n	8000e90 <_vfiprintf_r+0x1b8>
 8000eae:	ab03      	add	r3, sp, #12
 8000eb0:	9300      	str	r3, [sp, #0]
 8000eb2:	462a      	mov	r2, r5
 8000eb4:	4b12      	ldr	r3, [pc, #72]	@ (8000f00 <_vfiprintf_r+0x228>)
 8000eb6:	a904      	add	r1, sp, #16
 8000eb8:	4630      	mov	r0, r6
 8000eba:	f3af 8000 	nop.w
 8000ebe:	4607      	mov	r7, r0
 8000ec0:	1c78      	adds	r0, r7, #1
 8000ec2:	d1d6      	bne.n	8000e72 <_vfiprintf_r+0x19a>
 8000ec4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000ec6:	07d9      	lsls	r1, r3, #31
 8000ec8:	d405      	bmi.n	8000ed6 <_vfiprintf_r+0x1fe>
 8000eca:	89ab      	ldrh	r3, [r5, #12]
 8000ecc:	059a      	lsls	r2, r3, #22
 8000ece:	d402      	bmi.n	8000ed6 <_vfiprintf_r+0x1fe>
 8000ed0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ed2:	f7ff fddd 	bl	8000a90 <__retarget_lock_release_recursive>
 8000ed6:	89ab      	ldrh	r3, [r5, #12]
 8000ed8:	065b      	lsls	r3, r3, #25
 8000eda:	f53f af1f 	bmi.w	8000d1c <_vfiprintf_r+0x44>
 8000ede:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000ee0:	e71e      	b.n	8000d20 <_vfiprintf_r+0x48>
 8000ee2:	ab03      	add	r3, sp, #12
 8000ee4:	9300      	str	r3, [sp, #0]
 8000ee6:	462a      	mov	r2, r5
 8000ee8:	4b05      	ldr	r3, [pc, #20]	@ (8000f00 <_vfiprintf_r+0x228>)
 8000eea:	a904      	add	r1, sp, #16
 8000eec:	4630      	mov	r0, r6
 8000eee:	f000 f879 	bl	8000fe4 <_printf_i>
 8000ef2:	e7e4      	b.n	8000ebe <_vfiprintf_r+0x1e6>
 8000ef4:	080015e9 	.word	0x080015e9
 8000ef8:	080015f3 	.word	0x080015f3
 8000efc:	00000000 	.word	0x00000000
 8000f00:	08000cb3 	.word	0x08000cb3
 8000f04:	080015ef 	.word	0x080015ef

08000f08 <_printf_common>:
 8000f08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f0c:	4616      	mov	r6, r2
 8000f0e:	4698      	mov	r8, r3
 8000f10:	688a      	ldr	r2, [r1, #8]
 8000f12:	690b      	ldr	r3, [r1, #16]
 8000f14:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000f18:	4293      	cmp	r3, r2
 8000f1a:	bfb8      	it	lt
 8000f1c:	4613      	movlt	r3, r2
 8000f1e:	6033      	str	r3, [r6, #0]
 8000f20:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000f24:	4607      	mov	r7, r0
 8000f26:	460c      	mov	r4, r1
 8000f28:	b10a      	cbz	r2, 8000f2e <_printf_common+0x26>
 8000f2a:	3301      	adds	r3, #1
 8000f2c:	6033      	str	r3, [r6, #0]
 8000f2e:	6823      	ldr	r3, [r4, #0]
 8000f30:	0699      	lsls	r1, r3, #26
 8000f32:	bf42      	ittt	mi
 8000f34:	6833      	ldrmi	r3, [r6, #0]
 8000f36:	3302      	addmi	r3, #2
 8000f38:	6033      	strmi	r3, [r6, #0]
 8000f3a:	6825      	ldr	r5, [r4, #0]
 8000f3c:	f015 0506 	ands.w	r5, r5, #6
 8000f40:	d106      	bne.n	8000f50 <_printf_common+0x48>
 8000f42:	f104 0a19 	add.w	sl, r4, #25
 8000f46:	68e3      	ldr	r3, [r4, #12]
 8000f48:	6832      	ldr	r2, [r6, #0]
 8000f4a:	1a9b      	subs	r3, r3, r2
 8000f4c:	42ab      	cmp	r3, r5
 8000f4e:	dc26      	bgt.n	8000f9e <_printf_common+0x96>
 8000f50:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000f54:	6822      	ldr	r2, [r4, #0]
 8000f56:	3b00      	subs	r3, #0
 8000f58:	bf18      	it	ne
 8000f5a:	2301      	movne	r3, #1
 8000f5c:	0692      	lsls	r2, r2, #26
 8000f5e:	d42b      	bmi.n	8000fb8 <_printf_common+0xb0>
 8000f60:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000f64:	4641      	mov	r1, r8
 8000f66:	4638      	mov	r0, r7
 8000f68:	47c8      	blx	r9
 8000f6a:	3001      	adds	r0, #1
 8000f6c:	d01e      	beq.n	8000fac <_printf_common+0xa4>
 8000f6e:	6823      	ldr	r3, [r4, #0]
 8000f70:	6922      	ldr	r2, [r4, #16]
 8000f72:	f003 0306 	and.w	r3, r3, #6
 8000f76:	2b04      	cmp	r3, #4
 8000f78:	bf02      	ittt	eq
 8000f7a:	68e5      	ldreq	r5, [r4, #12]
 8000f7c:	6833      	ldreq	r3, [r6, #0]
 8000f7e:	1aed      	subeq	r5, r5, r3
 8000f80:	68a3      	ldr	r3, [r4, #8]
 8000f82:	bf0c      	ite	eq
 8000f84:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f88:	2500      	movne	r5, #0
 8000f8a:	4293      	cmp	r3, r2
 8000f8c:	bfc4      	itt	gt
 8000f8e:	1a9b      	subgt	r3, r3, r2
 8000f90:	18ed      	addgt	r5, r5, r3
 8000f92:	2600      	movs	r6, #0
 8000f94:	341a      	adds	r4, #26
 8000f96:	42b5      	cmp	r5, r6
 8000f98:	d11a      	bne.n	8000fd0 <_printf_common+0xc8>
 8000f9a:	2000      	movs	r0, #0
 8000f9c:	e008      	b.n	8000fb0 <_printf_common+0xa8>
 8000f9e:	2301      	movs	r3, #1
 8000fa0:	4652      	mov	r2, sl
 8000fa2:	4641      	mov	r1, r8
 8000fa4:	4638      	mov	r0, r7
 8000fa6:	47c8      	blx	r9
 8000fa8:	3001      	adds	r0, #1
 8000faa:	d103      	bne.n	8000fb4 <_printf_common+0xac>
 8000fac:	f04f 30ff 	mov.w	r0, #4294967295
 8000fb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fb4:	3501      	adds	r5, #1
 8000fb6:	e7c6      	b.n	8000f46 <_printf_common+0x3e>
 8000fb8:	18e1      	adds	r1, r4, r3
 8000fba:	1c5a      	adds	r2, r3, #1
 8000fbc:	2030      	movs	r0, #48	@ 0x30
 8000fbe:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000fc2:	4422      	add	r2, r4
 8000fc4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000fc8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000fcc:	3302      	adds	r3, #2
 8000fce:	e7c7      	b.n	8000f60 <_printf_common+0x58>
 8000fd0:	2301      	movs	r3, #1
 8000fd2:	4622      	mov	r2, r4
 8000fd4:	4641      	mov	r1, r8
 8000fd6:	4638      	mov	r0, r7
 8000fd8:	47c8      	blx	r9
 8000fda:	3001      	adds	r0, #1
 8000fdc:	d0e6      	beq.n	8000fac <_printf_common+0xa4>
 8000fde:	3601      	adds	r6, #1
 8000fe0:	e7d9      	b.n	8000f96 <_printf_common+0x8e>
	...

08000fe4 <_printf_i>:
 8000fe4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fe8:	7e0f      	ldrb	r7, [r1, #24]
 8000fea:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000fec:	2f78      	cmp	r7, #120	@ 0x78
 8000fee:	4691      	mov	r9, r2
 8000ff0:	4680      	mov	r8, r0
 8000ff2:	460c      	mov	r4, r1
 8000ff4:	469a      	mov	sl, r3
 8000ff6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000ffa:	d807      	bhi.n	800100c <_printf_i+0x28>
 8000ffc:	2f62      	cmp	r7, #98	@ 0x62
 8000ffe:	d80a      	bhi.n	8001016 <_printf_i+0x32>
 8001000:	2f00      	cmp	r7, #0
 8001002:	f000 80d2 	beq.w	80011aa <_printf_i+0x1c6>
 8001006:	2f58      	cmp	r7, #88	@ 0x58
 8001008:	f000 80b9 	beq.w	800117e <_printf_i+0x19a>
 800100c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001010:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001014:	e03a      	b.n	800108c <_printf_i+0xa8>
 8001016:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800101a:	2b15      	cmp	r3, #21
 800101c:	d8f6      	bhi.n	800100c <_printf_i+0x28>
 800101e:	a101      	add	r1, pc, #4	@ (adr r1, 8001024 <_printf_i+0x40>)
 8001020:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001024:	0800107d 	.word	0x0800107d
 8001028:	08001091 	.word	0x08001091
 800102c:	0800100d 	.word	0x0800100d
 8001030:	0800100d 	.word	0x0800100d
 8001034:	0800100d 	.word	0x0800100d
 8001038:	0800100d 	.word	0x0800100d
 800103c:	08001091 	.word	0x08001091
 8001040:	0800100d 	.word	0x0800100d
 8001044:	0800100d 	.word	0x0800100d
 8001048:	0800100d 	.word	0x0800100d
 800104c:	0800100d 	.word	0x0800100d
 8001050:	08001191 	.word	0x08001191
 8001054:	080010bb 	.word	0x080010bb
 8001058:	0800114b 	.word	0x0800114b
 800105c:	0800100d 	.word	0x0800100d
 8001060:	0800100d 	.word	0x0800100d
 8001064:	080011b3 	.word	0x080011b3
 8001068:	0800100d 	.word	0x0800100d
 800106c:	080010bb 	.word	0x080010bb
 8001070:	0800100d 	.word	0x0800100d
 8001074:	0800100d 	.word	0x0800100d
 8001078:	08001153 	.word	0x08001153
 800107c:	6833      	ldr	r3, [r6, #0]
 800107e:	1d1a      	adds	r2, r3, #4
 8001080:	681b      	ldr	r3, [r3, #0]
 8001082:	6032      	str	r2, [r6, #0]
 8001084:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001088:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800108c:	2301      	movs	r3, #1
 800108e:	e09d      	b.n	80011cc <_printf_i+0x1e8>
 8001090:	6833      	ldr	r3, [r6, #0]
 8001092:	6820      	ldr	r0, [r4, #0]
 8001094:	1d19      	adds	r1, r3, #4
 8001096:	6031      	str	r1, [r6, #0]
 8001098:	0606      	lsls	r6, r0, #24
 800109a:	d501      	bpl.n	80010a0 <_printf_i+0xbc>
 800109c:	681d      	ldr	r5, [r3, #0]
 800109e:	e003      	b.n	80010a8 <_printf_i+0xc4>
 80010a0:	0645      	lsls	r5, r0, #25
 80010a2:	d5fb      	bpl.n	800109c <_printf_i+0xb8>
 80010a4:	f9b3 5000 	ldrsh.w	r5, [r3]
 80010a8:	2d00      	cmp	r5, #0
 80010aa:	da03      	bge.n	80010b4 <_printf_i+0xd0>
 80010ac:	232d      	movs	r3, #45	@ 0x2d
 80010ae:	426d      	negs	r5, r5
 80010b0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80010b4:	4859      	ldr	r0, [pc, #356]	@ (800121c <_printf_i+0x238>)
 80010b6:	230a      	movs	r3, #10
 80010b8:	e011      	b.n	80010de <_printf_i+0xfa>
 80010ba:	6821      	ldr	r1, [r4, #0]
 80010bc:	6833      	ldr	r3, [r6, #0]
 80010be:	0608      	lsls	r0, r1, #24
 80010c0:	f853 5b04 	ldr.w	r5, [r3], #4
 80010c4:	d402      	bmi.n	80010cc <_printf_i+0xe8>
 80010c6:	0649      	lsls	r1, r1, #25
 80010c8:	bf48      	it	mi
 80010ca:	b2ad      	uxthmi	r5, r5
 80010cc:	2f6f      	cmp	r7, #111	@ 0x6f
 80010ce:	4853      	ldr	r0, [pc, #332]	@ (800121c <_printf_i+0x238>)
 80010d0:	6033      	str	r3, [r6, #0]
 80010d2:	bf14      	ite	ne
 80010d4:	230a      	movne	r3, #10
 80010d6:	2308      	moveq	r3, #8
 80010d8:	2100      	movs	r1, #0
 80010da:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80010de:	6866      	ldr	r6, [r4, #4]
 80010e0:	60a6      	str	r6, [r4, #8]
 80010e2:	2e00      	cmp	r6, #0
 80010e4:	bfa2      	ittt	ge
 80010e6:	6821      	ldrge	r1, [r4, #0]
 80010e8:	f021 0104 	bicge.w	r1, r1, #4
 80010ec:	6021      	strge	r1, [r4, #0]
 80010ee:	b90d      	cbnz	r5, 80010f4 <_printf_i+0x110>
 80010f0:	2e00      	cmp	r6, #0
 80010f2:	d04b      	beq.n	800118c <_printf_i+0x1a8>
 80010f4:	4616      	mov	r6, r2
 80010f6:	fbb5 f1f3 	udiv	r1, r5, r3
 80010fa:	fb03 5711 	mls	r7, r3, r1, r5
 80010fe:	5dc7      	ldrb	r7, [r0, r7]
 8001100:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001104:	462f      	mov	r7, r5
 8001106:	42bb      	cmp	r3, r7
 8001108:	460d      	mov	r5, r1
 800110a:	d9f4      	bls.n	80010f6 <_printf_i+0x112>
 800110c:	2b08      	cmp	r3, #8
 800110e:	d10b      	bne.n	8001128 <_printf_i+0x144>
 8001110:	6823      	ldr	r3, [r4, #0]
 8001112:	07df      	lsls	r7, r3, #31
 8001114:	d508      	bpl.n	8001128 <_printf_i+0x144>
 8001116:	6923      	ldr	r3, [r4, #16]
 8001118:	6861      	ldr	r1, [r4, #4]
 800111a:	4299      	cmp	r1, r3
 800111c:	bfde      	ittt	le
 800111e:	2330      	movle	r3, #48	@ 0x30
 8001120:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001124:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001128:	1b92      	subs	r2, r2, r6
 800112a:	6122      	str	r2, [r4, #16]
 800112c:	f8cd a000 	str.w	sl, [sp]
 8001130:	464b      	mov	r3, r9
 8001132:	aa03      	add	r2, sp, #12
 8001134:	4621      	mov	r1, r4
 8001136:	4640      	mov	r0, r8
 8001138:	f7ff fee6 	bl	8000f08 <_printf_common>
 800113c:	3001      	adds	r0, #1
 800113e:	d14a      	bne.n	80011d6 <_printf_i+0x1f2>
 8001140:	f04f 30ff 	mov.w	r0, #4294967295
 8001144:	b004      	add	sp, #16
 8001146:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800114a:	6823      	ldr	r3, [r4, #0]
 800114c:	f043 0320 	orr.w	r3, r3, #32
 8001150:	6023      	str	r3, [r4, #0]
 8001152:	4833      	ldr	r0, [pc, #204]	@ (8001220 <_printf_i+0x23c>)
 8001154:	2778      	movs	r7, #120	@ 0x78
 8001156:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800115a:	6823      	ldr	r3, [r4, #0]
 800115c:	6831      	ldr	r1, [r6, #0]
 800115e:	061f      	lsls	r7, r3, #24
 8001160:	f851 5b04 	ldr.w	r5, [r1], #4
 8001164:	d402      	bmi.n	800116c <_printf_i+0x188>
 8001166:	065f      	lsls	r7, r3, #25
 8001168:	bf48      	it	mi
 800116a:	b2ad      	uxthmi	r5, r5
 800116c:	6031      	str	r1, [r6, #0]
 800116e:	07d9      	lsls	r1, r3, #31
 8001170:	bf44      	itt	mi
 8001172:	f043 0320 	orrmi.w	r3, r3, #32
 8001176:	6023      	strmi	r3, [r4, #0]
 8001178:	b11d      	cbz	r5, 8001182 <_printf_i+0x19e>
 800117a:	2310      	movs	r3, #16
 800117c:	e7ac      	b.n	80010d8 <_printf_i+0xf4>
 800117e:	4827      	ldr	r0, [pc, #156]	@ (800121c <_printf_i+0x238>)
 8001180:	e7e9      	b.n	8001156 <_printf_i+0x172>
 8001182:	6823      	ldr	r3, [r4, #0]
 8001184:	f023 0320 	bic.w	r3, r3, #32
 8001188:	6023      	str	r3, [r4, #0]
 800118a:	e7f6      	b.n	800117a <_printf_i+0x196>
 800118c:	4616      	mov	r6, r2
 800118e:	e7bd      	b.n	800110c <_printf_i+0x128>
 8001190:	6833      	ldr	r3, [r6, #0]
 8001192:	6825      	ldr	r5, [r4, #0]
 8001194:	6961      	ldr	r1, [r4, #20]
 8001196:	1d18      	adds	r0, r3, #4
 8001198:	6030      	str	r0, [r6, #0]
 800119a:	062e      	lsls	r6, r5, #24
 800119c:	681b      	ldr	r3, [r3, #0]
 800119e:	d501      	bpl.n	80011a4 <_printf_i+0x1c0>
 80011a0:	6019      	str	r1, [r3, #0]
 80011a2:	e002      	b.n	80011aa <_printf_i+0x1c6>
 80011a4:	0668      	lsls	r0, r5, #25
 80011a6:	d5fb      	bpl.n	80011a0 <_printf_i+0x1bc>
 80011a8:	8019      	strh	r1, [r3, #0]
 80011aa:	2300      	movs	r3, #0
 80011ac:	6123      	str	r3, [r4, #16]
 80011ae:	4616      	mov	r6, r2
 80011b0:	e7bc      	b.n	800112c <_printf_i+0x148>
 80011b2:	6833      	ldr	r3, [r6, #0]
 80011b4:	1d1a      	adds	r2, r3, #4
 80011b6:	6032      	str	r2, [r6, #0]
 80011b8:	681e      	ldr	r6, [r3, #0]
 80011ba:	6862      	ldr	r2, [r4, #4]
 80011bc:	2100      	movs	r1, #0
 80011be:	4630      	mov	r0, r6
 80011c0:	f7ff f826 	bl	8000210 <memchr>
 80011c4:	b108      	cbz	r0, 80011ca <_printf_i+0x1e6>
 80011c6:	1b80      	subs	r0, r0, r6
 80011c8:	6060      	str	r0, [r4, #4]
 80011ca:	6863      	ldr	r3, [r4, #4]
 80011cc:	6123      	str	r3, [r4, #16]
 80011ce:	2300      	movs	r3, #0
 80011d0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011d4:	e7aa      	b.n	800112c <_printf_i+0x148>
 80011d6:	6923      	ldr	r3, [r4, #16]
 80011d8:	4632      	mov	r2, r6
 80011da:	4649      	mov	r1, r9
 80011dc:	4640      	mov	r0, r8
 80011de:	47d0      	blx	sl
 80011e0:	3001      	adds	r0, #1
 80011e2:	d0ad      	beq.n	8001140 <_printf_i+0x15c>
 80011e4:	6823      	ldr	r3, [r4, #0]
 80011e6:	079b      	lsls	r3, r3, #30
 80011e8:	d413      	bmi.n	8001212 <_printf_i+0x22e>
 80011ea:	68e0      	ldr	r0, [r4, #12]
 80011ec:	9b03      	ldr	r3, [sp, #12]
 80011ee:	4298      	cmp	r0, r3
 80011f0:	bfb8      	it	lt
 80011f2:	4618      	movlt	r0, r3
 80011f4:	e7a6      	b.n	8001144 <_printf_i+0x160>
 80011f6:	2301      	movs	r3, #1
 80011f8:	4632      	mov	r2, r6
 80011fa:	4649      	mov	r1, r9
 80011fc:	4640      	mov	r0, r8
 80011fe:	47d0      	blx	sl
 8001200:	3001      	adds	r0, #1
 8001202:	d09d      	beq.n	8001140 <_printf_i+0x15c>
 8001204:	3501      	adds	r5, #1
 8001206:	68e3      	ldr	r3, [r4, #12]
 8001208:	9903      	ldr	r1, [sp, #12]
 800120a:	1a5b      	subs	r3, r3, r1
 800120c:	42ab      	cmp	r3, r5
 800120e:	dcf2      	bgt.n	80011f6 <_printf_i+0x212>
 8001210:	e7eb      	b.n	80011ea <_printf_i+0x206>
 8001212:	2500      	movs	r5, #0
 8001214:	f104 0619 	add.w	r6, r4, #25
 8001218:	e7f5      	b.n	8001206 <_printf_i+0x222>
 800121a:	bf00      	nop
 800121c:	080015fa 	.word	0x080015fa
 8001220:	0800160b 	.word	0x0800160b

08001224 <__sflush_r>:
 8001224:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001228:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800122c:	0716      	lsls	r6, r2, #28
 800122e:	4605      	mov	r5, r0
 8001230:	460c      	mov	r4, r1
 8001232:	d454      	bmi.n	80012de <__sflush_r+0xba>
 8001234:	684b      	ldr	r3, [r1, #4]
 8001236:	2b00      	cmp	r3, #0
 8001238:	dc02      	bgt.n	8001240 <__sflush_r+0x1c>
 800123a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800123c:	2b00      	cmp	r3, #0
 800123e:	dd48      	ble.n	80012d2 <__sflush_r+0xae>
 8001240:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001242:	2e00      	cmp	r6, #0
 8001244:	d045      	beq.n	80012d2 <__sflush_r+0xae>
 8001246:	2300      	movs	r3, #0
 8001248:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800124c:	682f      	ldr	r7, [r5, #0]
 800124e:	6a21      	ldr	r1, [r4, #32]
 8001250:	602b      	str	r3, [r5, #0]
 8001252:	d030      	beq.n	80012b6 <__sflush_r+0x92>
 8001254:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001256:	89a3      	ldrh	r3, [r4, #12]
 8001258:	0759      	lsls	r1, r3, #29
 800125a:	d505      	bpl.n	8001268 <__sflush_r+0x44>
 800125c:	6863      	ldr	r3, [r4, #4]
 800125e:	1ad2      	subs	r2, r2, r3
 8001260:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001262:	b10b      	cbz	r3, 8001268 <__sflush_r+0x44>
 8001264:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001266:	1ad2      	subs	r2, r2, r3
 8001268:	2300      	movs	r3, #0
 800126a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800126c:	6a21      	ldr	r1, [r4, #32]
 800126e:	4628      	mov	r0, r5
 8001270:	47b0      	blx	r6
 8001272:	1c43      	adds	r3, r0, #1
 8001274:	89a3      	ldrh	r3, [r4, #12]
 8001276:	d106      	bne.n	8001286 <__sflush_r+0x62>
 8001278:	6829      	ldr	r1, [r5, #0]
 800127a:	291d      	cmp	r1, #29
 800127c:	d82b      	bhi.n	80012d6 <__sflush_r+0xb2>
 800127e:	4a2a      	ldr	r2, [pc, #168]	@ (8001328 <__sflush_r+0x104>)
 8001280:	410a      	asrs	r2, r1
 8001282:	07d6      	lsls	r6, r2, #31
 8001284:	d427      	bmi.n	80012d6 <__sflush_r+0xb2>
 8001286:	2200      	movs	r2, #0
 8001288:	6062      	str	r2, [r4, #4]
 800128a:	04d9      	lsls	r1, r3, #19
 800128c:	6922      	ldr	r2, [r4, #16]
 800128e:	6022      	str	r2, [r4, #0]
 8001290:	d504      	bpl.n	800129c <__sflush_r+0x78>
 8001292:	1c42      	adds	r2, r0, #1
 8001294:	d101      	bne.n	800129a <__sflush_r+0x76>
 8001296:	682b      	ldr	r3, [r5, #0]
 8001298:	b903      	cbnz	r3, 800129c <__sflush_r+0x78>
 800129a:	6560      	str	r0, [r4, #84]	@ 0x54
 800129c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800129e:	602f      	str	r7, [r5, #0]
 80012a0:	b1b9      	cbz	r1, 80012d2 <__sflush_r+0xae>
 80012a2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80012a6:	4299      	cmp	r1, r3
 80012a8:	d002      	beq.n	80012b0 <__sflush_r+0x8c>
 80012aa:	4628      	mov	r0, r5
 80012ac:	f7ff fbf2 	bl	8000a94 <_free_r>
 80012b0:	2300      	movs	r3, #0
 80012b2:	6363      	str	r3, [r4, #52]	@ 0x34
 80012b4:	e00d      	b.n	80012d2 <__sflush_r+0xae>
 80012b6:	2301      	movs	r3, #1
 80012b8:	4628      	mov	r0, r5
 80012ba:	47b0      	blx	r6
 80012bc:	4602      	mov	r2, r0
 80012be:	1c50      	adds	r0, r2, #1
 80012c0:	d1c9      	bne.n	8001256 <__sflush_r+0x32>
 80012c2:	682b      	ldr	r3, [r5, #0]
 80012c4:	2b00      	cmp	r3, #0
 80012c6:	d0c6      	beq.n	8001256 <__sflush_r+0x32>
 80012c8:	2b1d      	cmp	r3, #29
 80012ca:	d001      	beq.n	80012d0 <__sflush_r+0xac>
 80012cc:	2b16      	cmp	r3, #22
 80012ce:	d11e      	bne.n	800130e <__sflush_r+0xea>
 80012d0:	602f      	str	r7, [r5, #0]
 80012d2:	2000      	movs	r0, #0
 80012d4:	e022      	b.n	800131c <__sflush_r+0xf8>
 80012d6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012da:	b21b      	sxth	r3, r3
 80012dc:	e01b      	b.n	8001316 <__sflush_r+0xf2>
 80012de:	690f      	ldr	r7, [r1, #16]
 80012e0:	2f00      	cmp	r7, #0
 80012e2:	d0f6      	beq.n	80012d2 <__sflush_r+0xae>
 80012e4:	0793      	lsls	r3, r2, #30
 80012e6:	680e      	ldr	r6, [r1, #0]
 80012e8:	bf08      	it	eq
 80012ea:	694b      	ldreq	r3, [r1, #20]
 80012ec:	600f      	str	r7, [r1, #0]
 80012ee:	bf18      	it	ne
 80012f0:	2300      	movne	r3, #0
 80012f2:	eba6 0807 	sub.w	r8, r6, r7
 80012f6:	608b      	str	r3, [r1, #8]
 80012f8:	f1b8 0f00 	cmp.w	r8, #0
 80012fc:	dde9      	ble.n	80012d2 <__sflush_r+0xae>
 80012fe:	6a21      	ldr	r1, [r4, #32]
 8001300:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8001302:	4643      	mov	r3, r8
 8001304:	463a      	mov	r2, r7
 8001306:	4628      	mov	r0, r5
 8001308:	47b0      	blx	r6
 800130a:	2800      	cmp	r0, #0
 800130c:	dc08      	bgt.n	8001320 <__sflush_r+0xfc>
 800130e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001312:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001316:	81a3      	strh	r3, [r4, #12]
 8001318:	f04f 30ff 	mov.w	r0, #4294967295
 800131c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001320:	4407      	add	r7, r0
 8001322:	eba8 0800 	sub.w	r8, r8, r0
 8001326:	e7e7      	b.n	80012f8 <__sflush_r+0xd4>
 8001328:	dfbffffe 	.word	0xdfbffffe

0800132c <_fflush_r>:
 800132c:	b538      	push	{r3, r4, r5, lr}
 800132e:	690b      	ldr	r3, [r1, #16]
 8001330:	4605      	mov	r5, r0
 8001332:	460c      	mov	r4, r1
 8001334:	b913      	cbnz	r3, 800133c <_fflush_r+0x10>
 8001336:	2500      	movs	r5, #0
 8001338:	4628      	mov	r0, r5
 800133a:	bd38      	pop	{r3, r4, r5, pc}
 800133c:	b118      	cbz	r0, 8001346 <_fflush_r+0x1a>
 800133e:	6a03      	ldr	r3, [r0, #32]
 8001340:	b90b      	cbnz	r3, 8001346 <_fflush_r+0x1a>
 8001342:	f7ff fa9f 	bl	8000884 <__sinit>
 8001346:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800134a:	2b00      	cmp	r3, #0
 800134c:	d0f3      	beq.n	8001336 <_fflush_r+0xa>
 800134e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001350:	07d0      	lsls	r0, r2, #31
 8001352:	d404      	bmi.n	800135e <_fflush_r+0x32>
 8001354:	0599      	lsls	r1, r3, #22
 8001356:	d402      	bmi.n	800135e <_fflush_r+0x32>
 8001358:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800135a:	f7ff fb98 	bl	8000a8e <__retarget_lock_acquire_recursive>
 800135e:	4628      	mov	r0, r5
 8001360:	4621      	mov	r1, r4
 8001362:	f7ff ff5f 	bl	8001224 <__sflush_r>
 8001366:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001368:	07da      	lsls	r2, r3, #31
 800136a:	4605      	mov	r5, r0
 800136c:	d4e4      	bmi.n	8001338 <_fflush_r+0xc>
 800136e:	89a3      	ldrh	r3, [r4, #12]
 8001370:	059b      	lsls	r3, r3, #22
 8001372:	d4e1      	bmi.n	8001338 <_fflush_r+0xc>
 8001374:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001376:	f7ff fb8b 	bl	8000a90 <__retarget_lock_release_recursive>
 800137a:	e7dd      	b.n	8001338 <_fflush_r+0xc>

0800137c <__swbuf_r>:
 800137c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800137e:	460e      	mov	r6, r1
 8001380:	4614      	mov	r4, r2
 8001382:	4605      	mov	r5, r0
 8001384:	b118      	cbz	r0, 800138e <__swbuf_r+0x12>
 8001386:	6a03      	ldr	r3, [r0, #32]
 8001388:	b90b      	cbnz	r3, 800138e <__swbuf_r+0x12>
 800138a:	f7ff fa7b 	bl	8000884 <__sinit>
 800138e:	69a3      	ldr	r3, [r4, #24]
 8001390:	60a3      	str	r3, [r4, #8]
 8001392:	89a3      	ldrh	r3, [r4, #12]
 8001394:	071a      	lsls	r2, r3, #28
 8001396:	d501      	bpl.n	800139c <__swbuf_r+0x20>
 8001398:	6923      	ldr	r3, [r4, #16]
 800139a:	b943      	cbnz	r3, 80013ae <__swbuf_r+0x32>
 800139c:	4621      	mov	r1, r4
 800139e:	4628      	mov	r0, r5
 80013a0:	f000 f82a 	bl	80013f8 <__swsetup_r>
 80013a4:	b118      	cbz	r0, 80013ae <__swbuf_r+0x32>
 80013a6:	f04f 37ff 	mov.w	r7, #4294967295
 80013aa:	4638      	mov	r0, r7
 80013ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80013ae:	6823      	ldr	r3, [r4, #0]
 80013b0:	6922      	ldr	r2, [r4, #16]
 80013b2:	1a98      	subs	r0, r3, r2
 80013b4:	6963      	ldr	r3, [r4, #20]
 80013b6:	b2f6      	uxtb	r6, r6
 80013b8:	4283      	cmp	r3, r0
 80013ba:	4637      	mov	r7, r6
 80013bc:	dc05      	bgt.n	80013ca <__swbuf_r+0x4e>
 80013be:	4621      	mov	r1, r4
 80013c0:	4628      	mov	r0, r5
 80013c2:	f7ff ffb3 	bl	800132c <_fflush_r>
 80013c6:	2800      	cmp	r0, #0
 80013c8:	d1ed      	bne.n	80013a6 <__swbuf_r+0x2a>
 80013ca:	68a3      	ldr	r3, [r4, #8]
 80013cc:	3b01      	subs	r3, #1
 80013ce:	60a3      	str	r3, [r4, #8]
 80013d0:	6823      	ldr	r3, [r4, #0]
 80013d2:	1c5a      	adds	r2, r3, #1
 80013d4:	6022      	str	r2, [r4, #0]
 80013d6:	701e      	strb	r6, [r3, #0]
 80013d8:	6962      	ldr	r2, [r4, #20]
 80013da:	1c43      	adds	r3, r0, #1
 80013dc:	429a      	cmp	r2, r3
 80013de:	d004      	beq.n	80013ea <__swbuf_r+0x6e>
 80013e0:	89a3      	ldrh	r3, [r4, #12]
 80013e2:	07db      	lsls	r3, r3, #31
 80013e4:	d5e1      	bpl.n	80013aa <__swbuf_r+0x2e>
 80013e6:	2e0a      	cmp	r6, #10
 80013e8:	d1df      	bne.n	80013aa <__swbuf_r+0x2e>
 80013ea:	4621      	mov	r1, r4
 80013ec:	4628      	mov	r0, r5
 80013ee:	f7ff ff9d 	bl	800132c <_fflush_r>
 80013f2:	2800      	cmp	r0, #0
 80013f4:	d0d9      	beq.n	80013aa <__swbuf_r+0x2e>
 80013f6:	e7d6      	b.n	80013a6 <__swbuf_r+0x2a>

080013f8 <__swsetup_r>:
 80013f8:	b538      	push	{r3, r4, r5, lr}
 80013fa:	4b29      	ldr	r3, [pc, #164]	@ (80014a0 <__swsetup_r+0xa8>)
 80013fc:	4605      	mov	r5, r0
 80013fe:	6818      	ldr	r0, [r3, #0]
 8001400:	460c      	mov	r4, r1
 8001402:	b118      	cbz	r0, 800140c <__swsetup_r+0x14>
 8001404:	6a03      	ldr	r3, [r0, #32]
 8001406:	b90b      	cbnz	r3, 800140c <__swsetup_r+0x14>
 8001408:	f7ff fa3c 	bl	8000884 <__sinit>
 800140c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001410:	0719      	lsls	r1, r3, #28
 8001412:	d422      	bmi.n	800145a <__swsetup_r+0x62>
 8001414:	06da      	lsls	r2, r3, #27
 8001416:	d407      	bmi.n	8001428 <__swsetup_r+0x30>
 8001418:	2209      	movs	r2, #9
 800141a:	602a      	str	r2, [r5, #0]
 800141c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001420:	81a3      	strh	r3, [r4, #12]
 8001422:	f04f 30ff 	mov.w	r0, #4294967295
 8001426:	e033      	b.n	8001490 <__swsetup_r+0x98>
 8001428:	0758      	lsls	r0, r3, #29
 800142a:	d512      	bpl.n	8001452 <__swsetup_r+0x5a>
 800142c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800142e:	b141      	cbz	r1, 8001442 <__swsetup_r+0x4a>
 8001430:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001434:	4299      	cmp	r1, r3
 8001436:	d002      	beq.n	800143e <__swsetup_r+0x46>
 8001438:	4628      	mov	r0, r5
 800143a:	f7ff fb2b 	bl	8000a94 <_free_r>
 800143e:	2300      	movs	r3, #0
 8001440:	6363      	str	r3, [r4, #52]	@ 0x34
 8001442:	89a3      	ldrh	r3, [r4, #12]
 8001444:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001448:	81a3      	strh	r3, [r4, #12]
 800144a:	2300      	movs	r3, #0
 800144c:	6063      	str	r3, [r4, #4]
 800144e:	6923      	ldr	r3, [r4, #16]
 8001450:	6023      	str	r3, [r4, #0]
 8001452:	89a3      	ldrh	r3, [r4, #12]
 8001454:	f043 0308 	orr.w	r3, r3, #8
 8001458:	81a3      	strh	r3, [r4, #12]
 800145a:	6923      	ldr	r3, [r4, #16]
 800145c:	b94b      	cbnz	r3, 8001472 <__swsetup_r+0x7a>
 800145e:	89a3      	ldrh	r3, [r4, #12]
 8001460:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001464:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001468:	d003      	beq.n	8001472 <__swsetup_r+0x7a>
 800146a:	4621      	mov	r1, r4
 800146c:	4628      	mov	r0, r5
 800146e:	f000 f84f 	bl	8001510 <__smakebuf_r>
 8001472:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001476:	f013 0201 	ands.w	r2, r3, #1
 800147a:	d00a      	beq.n	8001492 <__swsetup_r+0x9a>
 800147c:	2200      	movs	r2, #0
 800147e:	60a2      	str	r2, [r4, #8]
 8001480:	6962      	ldr	r2, [r4, #20]
 8001482:	4252      	negs	r2, r2
 8001484:	61a2      	str	r2, [r4, #24]
 8001486:	6922      	ldr	r2, [r4, #16]
 8001488:	b942      	cbnz	r2, 800149c <__swsetup_r+0xa4>
 800148a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800148e:	d1c5      	bne.n	800141c <__swsetup_r+0x24>
 8001490:	bd38      	pop	{r3, r4, r5, pc}
 8001492:	0799      	lsls	r1, r3, #30
 8001494:	bf58      	it	pl
 8001496:	6962      	ldrpl	r2, [r4, #20]
 8001498:	60a2      	str	r2, [r4, #8]
 800149a:	e7f4      	b.n	8001486 <__swsetup_r+0x8e>
 800149c:	2000      	movs	r0, #0
 800149e:	e7f7      	b.n	8001490 <__swsetup_r+0x98>
 80014a0:	20000018 	.word	0x20000018

080014a4 <_sbrk_r>:
 80014a4:	b538      	push	{r3, r4, r5, lr}
 80014a6:	4d06      	ldr	r5, [pc, #24]	@ (80014c0 <_sbrk_r+0x1c>)
 80014a8:	2300      	movs	r3, #0
 80014aa:	4604      	mov	r4, r0
 80014ac:	4608      	mov	r0, r1
 80014ae:	602b      	str	r3, [r5, #0]
 80014b0:	f7ff f8fc 	bl	80006ac <_sbrk>
 80014b4:	1c43      	adds	r3, r0, #1
 80014b6:	d102      	bne.n	80014be <_sbrk_r+0x1a>
 80014b8:	682b      	ldr	r3, [r5, #0]
 80014ba:	b103      	cbz	r3, 80014be <_sbrk_r+0x1a>
 80014bc:	6023      	str	r3, [r4, #0]
 80014be:	bd38      	pop	{r3, r4, r5, pc}
 80014c0:	200001e0 	.word	0x200001e0

080014c4 <__swhatbuf_r>:
 80014c4:	b570      	push	{r4, r5, r6, lr}
 80014c6:	460c      	mov	r4, r1
 80014c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014cc:	2900      	cmp	r1, #0
 80014ce:	b096      	sub	sp, #88	@ 0x58
 80014d0:	4615      	mov	r5, r2
 80014d2:	461e      	mov	r6, r3
 80014d4:	da0d      	bge.n	80014f2 <__swhatbuf_r+0x2e>
 80014d6:	89a3      	ldrh	r3, [r4, #12]
 80014d8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80014dc:	f04f 0100 	mov.w	r1, #0
 80014e0:	bf14      	ite	ne
 80014e2:	2340      	movne	r3, #64	@ 0x40
 80014e4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80014e8:	2000      	movs	r0, #0
 80014ea:	6031      	str	r1, [r6, #0]
 80014ec:	602b      	str	r3, [r5, #0]
 80014ee:	b016      	add	sp, #88	@ 0x58
 80014f0:	bd70      	pop	{r4, r5, r6, pc}
 80014f2:	466a      	mov	r2, sp
 80014f4:	f000 f848 	bl	8001588 <_fstat_r>
 80014f8:	2800      	cmp	r0, #0
 80014fa:	dbec      	blt.n	80014d6 <__swhatbuf_r+0x12>
 80014fc:	9901      	ldr	r1, [sp, #4]
 80014fe:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001502:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001506:	4259      	negs	r1, r3
 8001508:	4159      	adcs	r1, r3
 800150a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800150e:	e7eb      	b.n	80014e8 <__swhatbuf_r+0x24>

08001510 <__smakebuf_r>:
 8001510:	898b      	ldrh	r3, [r1, #12]
 8001512:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001514:	079d      	lsls	r5, r3, #30
 8001516:	4606      	mov	r6, r0
 8001518:	460c      	mov	r4, r1
 800151a:	d507      	bpl.n	800152c <__smakebuf_r+0x1c>
 800151c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001520:	6023      	str	r3, [r4, #0]
 8001522:	6123      	str	r3, [r4, #16]
 8001524:	2301      	movs	r3, #1
 8001526:	6163      	str	r3, [r4, #20]
 8001528:	b003      	add	sp, #12
 800152a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800152c:	ab01      	add	r3, sp, #4
 800152e:	466a      	mov	r2, sp
 8001530:	f7ff ffc8 	bl	80014c4 <__swhatbuf_r>
 8001534:	9f00      	ldr	r7, [sp, #0]
 8001536:	4605      	mov	r5, r0
 8001538:	4639      	mov	r1, r7
 800153a:	4630      	mov	r0, r6
 800153c:	f7ff fb16 	bl	8000b6c <_malloc_r>
 8001540:	b948      	cbnz	r0, 8001556 <__smakebuf_r+0x46>
 8001542:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001546:	059a      	lsls	r2, r3, #22
 8001548:	d4ee      	bmi.n	8001528 <__smakebuf_r+0x18>
 800154a:	f023 0303 	bic.w	r3, r3, #3
 800154e:	f043 0302 	orr.w	r3, r3, #2
 8001552:	81a3      	strh	r3, [r4, #12]
 8001554:	e7e2      	b.n	800151c <__smakebuf_r+0xc>
 8001556:	89a3      	ldrh	r3, [r4, #12]
 8001558:	6020      	str	r0, [r4, #0]
 800155a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800155e:	81a3      	strh	r3, [r4, #12]
 8001560:	9b01      	ldr	r3, [sp, #4]
 8001562:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001566:	b15b      	cbz	r3, 8001580 <__smakebuf_r+0x70>
 8001568:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800156c:	4630      	mov	r0, r6
 800156e:	f000 f81d 	bl	80015ac <_isatty_r>
 8001572:	b128      	cbz	r0, 8001580 <__smakebuf_r+0x70>
 8001574:	89a3      	ldrh	r3, [r4, #12]
 8001576:	f023 0303 	bic.w	r3, r3, #3
 800157a:	f043 0301 	orr.w	r3, r3, #1
 800157e:	81a3      	strh	r3, [r4, #12]
 8001580:	89a3      	ldrh	r3, [r4, #12]
 8001582:	431d      	orrs	r5, r3
 8001584:	81a5      	strh	r5, [r4, #12]
 8001586:	e7cf      	b.n	8001528 <__smakebuf_r+0x18>

08001588 <_fstat_r>:
 8001588:	b538      	push	{r3, r4, r5, lr}
 800158a:	4d07      	ldr	r5, [pc, #28]	@ (80015a8 <_fstat_r+0x20>)
 800158c:	2300      	movs	r3, #0
 800158e:	4604      	mov	r4, r0
 8001590:	4608      	mov	r0, r1
 8001592:	4611      	mov	r1, r2
 8001594:	602b      	str	r3, [r5, #0]
 8001596:	f7ff f860 	bl	800065a <_fstat>
 800159a:	1c43      	adds	r3, r0, #1
 800159c:	d102      	bne.n	80015a4 <_fstat_r+0x1c>
 800159e:	682b      	ldr	r3, [r5, #0]
 80015a0:	b103      	cbz	r3, 80015a4 <_fstat_r+0x1c>
 80015a2:	6023      	str	r3, [r4, #0]
 80015a4:	bd38      	pop	{r3, r4, r5, pc}
 80015a6:	bf00      	nop
 80015a8:	200001e0 	.word	0x200001e0

080015ac <_isatty_r>:
 80015ac:	b538      	push	{r3, r4, r5, lr}
 80015ae:	4d06      	ldr	r5, [pc, #24]	@ (80015c8 <_isatty_r+0x1c>)
 80015b0:	2300      	movs	r3, #0
 80015b2:	4604      	mov	r4, r0
 80015b4:	4608      	mov	r0, r1
 80015b6:	602b      	str	r3, [r5, #0]
 80015b8:	f7ff f85f 	bl	800067a <_isatty>
 80015bc:	1c43      	adds	r3, r0, #1
 80015be:	d102      	bne.n	80015c6 <_isatty_r+0x1a>
 80015c0:	682b      	ldr	r3, [r5, #0]
 80015c2:	b103      	cbz	r3, 80015c6 <_isatty_r+0x1a>
 80015c4:	6023      	str	r3, [r4, #0]
 80015c6:	bd38      	pop	{r3, r4, r5, pc}
 80015c8:	200001e0 	.word	0x200001e0

080015cc <_init>:
 80015cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ce:	bf00      	nop
 80015d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015d2:	bc08      	pop	{r3}
 80015d4:	469e      	mov	lr, r3
 80015d6:	4770      	bx	lr

080015d8 <_fini>:
 80015d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015da:	bf00      	nop
 80015dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015de:	bc08      	pop	{r3}
 80015e0:	469e      	mov	lr, r3
 80015e2:	4770      	bx	lr
